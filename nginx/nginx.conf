# Production Nginx Configuration for RevEd Kids
# Optimized for performance, security, and SSL termination

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker process settings for high performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # MIME types and default settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enhanced logging format for production monitoring
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Security-focused log format for auth endpoints
    log_format auth_log '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time auth_result="$sent_http_x_auth_result"';

    access_log /var/log/nginx/access.log main_ext;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    reset_timedout_connection on;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Hash table sizes
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;
    
    # Hide nginx version
    server_tokens off;
    
    # Real IP configuration for load balancers
    real_ip_header X-Forwarded-For;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_recursive on;

    # Enhanced security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; media-src 'self'; object-src 'none'; frame-src 'none'; worker-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self'; manifest-src 'self';" always;
    
    # HSTS header (added in HTTPS server blocks)
    # Strict-Transport-Security will be added per-server

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=global:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=15r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Advanced gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_disable "msie6";
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/x-font-ttf
        application/font-woff
        application/font-woff2;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL Configuration (modern, secure)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Upstream definitions with health checks and load balancing
    upstream backend_servers {
        least_conn;
        server backend-prod:3003 max_fails=3 fail_timeout=30s;
        # Add more backend servers for scaling:
        # server backend-prod-2:3003 max_fails=3 fail_timeout=30s;
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }

    upstream frontend_main_servers {
        least_conn;
        server frontend-main-prod:80 max_fails=3 fail_timeout=30s;
        # Add more frontend servers for scaling:
        # server frontend-main-prod-2:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream frontend_diamond_servers {
        least_conn;
        server frontend-diamond-prod:80 max_fails=3 fail_timeout=30s;
        # Add more frontend servers for scaling:
        # server frontend-diamond-prod-2:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Cache zones for static content
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=24h use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=10m use_temp_path=off;

    # Map for backend routing based on subdomain
    map $host $backend_upstream {
        default backend_servers;
        ~^api\. backend_servers;
        ~^admin\. backend_servers;
    }

    # Map for frontend routing based on subdomain/path
    map $host $frontend_upstream {
        default frontend_main_servers;
        ~^diamond\. frontend_diamond_servers;
        ~^main\. frontend_main_servers;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        server_tokens off;

        # Security headers even for redirects
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Health check endpoint (no redirect)
        location /.well-known/health-check {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ACME challenge for Let's Encrypt
        location ^~ /.well-known/acme-challenge/ {
            default_type "text/plain";
            root /var/www/certbot;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server for main application
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name yourdomain.com www.yourdomain.com;
        server_tokens off;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/yourdomain.com.crt;
        ssl_certificate_key /etc/nginx/ssl/yourdomain.com.key;
        
        # If using Let's Encrypt:
        # ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
        
        # SSL security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Enhanced security headers for HTTPS
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;

        # Connection and request limits
        limit_conn perip 20;
        limit_conn perserver 1000;
        limit_req zone=global burst=50 nodelay;

        # Root and index
        root /var/www/html;
        index index.html;

        # Logging
        access_log /var/log/nginx/yourdomain.com.access.log main_ext;
        error_log /var/log/nginx/yourdomain.com.error.log warn;

        # Static file serving with caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|tar|woff|woff2|ttf|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Cache-Status "STATIC";
            
            # Try files first, then proxy to frontend
            try_files $uri @frontend_proxy;
        }

        # Favicon
        location = /favicon.ico {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri @frontend_proxy;
        }

        # Robots.txt
        location = /robots.txt {
            expires 1d;
            add_header Cache-Control "public";
            try_files $uri @frontend_proxy;
        }

        # API endpoints with enhanced security
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=30 nodelay;
            
            # Security headers specific to API
            add_header X-API-Version "1.0" always;
            add_header X-Rate-Limit "15/s" always;
            
            # Proxy to backend
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Error handling
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;
        }

        # Authentication endpoints with strict rate limiting
        location ~ ^/api/auth/(login|register|reset-password) {
            # Very strict rate limiting for auth
            limit_req zone=auth burst=3 nodelay;
            
            # Enhanced logging for security monitoring
            access_log /var/log/nginx/auth.log auth_log;
            
            # Security headers
            add_header X-Auth-Endpoint "true" always;
            
            # Proxy to backend with special auth handling
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Auth-Request "true";
            
            # Timeouts (shorter for auth)
            proxy_connect_timeout 3s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # No caching for auth endpoints
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # File upload endpoints with special handling
        location ~ ^/api/(upload|files)/ {
            # Rate limiting for uploads
            limit_req zone=upload burst=5 nodelay;
            
            # Increased body size for file uploads
            client_max_body_size 50m;
            client_body_timeout 300s;
            
            # Proxy to backend
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Upload-specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable proxy buffering for large uploads
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # WebSocket endpoints
        location /ws {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # Health checks (no rate limiting)
        location = /api/health {
            access_log off;
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache api_cache;
            proxy_cache_valid 200 10s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        }

        # Frontend application (default location)
        location / {
            # Try static files first, then proxy to frontend
            try_files $uri $uri/ @frontend_proxy;
        }

        # Frontend proxy location
        location @frontend_proxy {
            proxy_pass http://frontend_main_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Frontend timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Caching for HTML/JS/CSS
            proxy_cache static_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            
            # Cache bypass for HTML files
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server for Diamond app subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name diamond.yourdomain.com;
        server_tokens off;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/diamond.yourdomain.com.crt;
        ssl_certificate_key /etc/nginx/ssl/diamond.yourdomain.com.key;
        
        # SSL security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Enhanced security headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Rate limiting
        limit_conn perip 20;
        limit_req zone=global burst=50 nodelay;

        # Logging
        access_log /var/log/nginx/diamond.yourdomain.com.access.log main_ext;

        # API endpoints (shared backend)
        location /api/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-App-Type "diamond";
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Diamond frontend
        location / {
            proxy_pass http://frontend_diamond_servers;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-App-Type "diamond";
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # Connection upgrade mapping for WebSockets
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Include additional server blocks
    include /etc/nginx/conf.d/*.conf;
}

# Stream block for TCP/UDP load balancing (if needed)
# stream {
#     upstream database_servers {
#         server mysql-prod:3306;
#     }
#     
#     server {
#         listen 3306;
#         proxy_pass database_servers;
#         proxy_timeout 3s;
#         proxy_responses 1;
#     }
# }