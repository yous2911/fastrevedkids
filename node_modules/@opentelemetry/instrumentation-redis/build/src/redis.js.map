{"version":3,"file":"redis.js","sourceRoot":"","sources":["../../src/redis.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;GAcG;AACH,oEAAqE;AAErE,kBAAkB;AAClB,uCAA0D;AAC1D,6DAAoE;AAEpE,0DAA8D;AAE9D,MAAM,cAAc,GAA+B;IACjD,iBAAiB,EAAE,KAAK;CACzB,CAAC;AAEF,mEAAmE;AACnE,MAAa,oBAAqB,SAAQ,qCAA+C;IAC/E,oBAAoB,CAA4B;IAChD,iBAAiB,CAAyB;IAElD,gFAAgF;IAChF,iGAAiG;IACzF,WAAW,GAAG,KAAK,CAAC;IAE5B,YAAY,SAAqC,EAAE;QACjD,MAAM,cAAc,GAAG,EAAE,GAAG,cAAc,EAAE,GAAG,MAAM,EAAE,CAAC;QACxD,KAAK,CAAC,sBAAY,EAAE,yBAAe,EAAE,cAAc,CAAC,CAAC;QAErD,IAAI,CAAC,oBAAoB,GAAG,IAAI,2CAAyB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAC5E,IAAI,CAAC,iBAAiB,GAAG,IAAI,wCAAsB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAEQ,SAAS,CAAC,SAAqC,EAAE;QACxD,MAAM,SAAS,GAAG,EAAE,GAAG,cAAc,EAAE,GAAG,MAAM,EAAE,CAAC;QACnD,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QAED,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAEQ,IAAI,KAAI,CAAC;IAET,iBAAiB,CAAC,cAA8B;QACvD,KAAK,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;IAC3D,CAAC;IAEQ,MAAM;QACb,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,CAAC;QACnC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IAEQ,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QACD,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;CACF;AAxDD,oDAwDC","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InstrumentationBase } from '@opentelemetry/instrumentation';\nimport { RedisInstrumentationConfig } from './types';\n/** @knipignore */\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { RedisInstrumentationV2_V3 } from './v2-v3/instrumentation';\nimport { TracerProvider } from '@opentelemetry/api';\nimport { RedisInstrumentationV4 } from './v4/instrumentation';\n\nconst DEFAULT_CONFIG: RedisInstrumentationConfig = {\n  requireParentSpan: false,\n};\n\n// Wrapper RedisInstrumentation that address all supported versions\nexport class RedisInstrumentation extends InstrumentationBase<RedisInstrumentationConfig> {\n  private instrumentationV2_V3: RedisInstrumentationV2_V3;\n  private instrumentationV4: RedisInstrumentationV4;\n\n  // this is used to bypass a flaw in the base class constructor, which is calling\n  // member functions before the constructor has a chance to fully initialize the member variables.\n  private initialized = false;\n\n  constructor(config: RedisInstrumentationConfig = {}) {\n    const resolvedConfig = { ...DEFAULT_CONFIG, ...config };\n    super(PACKAGE_NAME, PACKAGE_VERSION, resolvedConfig);\n\n    this.instrumentationV2_V3 = new RedisInstrumentationV2_V3(this.getConfig());\n    this.instrumentationV4 = new RedisInstrumentationV4(this.getConfig());\n    this.initialized = true;\n  }\n\n  override setConfig(config: RedisInstrumentationConfig = {}) {\n    const newConfig = { ...DEFAULT_CONFIG, ...config };\n    super.setConfig(newConfig);\n    if (!this.initialized) {\n      return;\n    }\n\n    this.instrumentationV2_V3.setConfig(newConfig);\n    this.instrumentationV4.setConfig(newConfig);\n  }\n\n  override init() {}\n\n  override setTracerProvider(tracerProvider: TracerProvider) {\n    super.setTracerProvider(tracerProvider);\n    if (!this.initialized) {\n      return;\n    }\n    this.instrumentationV2_V3.setTracerProvider(tracerProvider);\n    this.instrumentationV4.setTracerProvider(tracerProvider);\n  }\n\n  override enable() {\n    super.enable();\n    if (!this.initialized) {\n      return;\n    }\n    this.instrumentationV2_V3.enable();\n    this.instrumentationV4.enable();\n  }\n\n  override disable() {\n    super.disable();\n    if (!this.initialized) {\n      return;\n    }\n    this.instrumentationV2_V3.disable();\n    this.instrumentationV4.disable();\n  }\n}\n"]}