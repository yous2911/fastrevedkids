import { modules, exercises } from '../schema';
import { db } from '../connection';

export async function seedCP2025Exercises() {
  console.log('ðŸŒ± Seeding CP 2025 exercises...');
  
  // Create base modules for CP
  const cpModules = [
    {
      titre: 'FranÃ§ais CP - Lecture PÃ©riode 1',
      description: 'Correspondances graphÃ¨me-phonÃ¨me de base',
      niveau: 'CP' as const,
      matiere: 'FRANCAIS' as const,
      periode: 'P1' as const,
      ordre: 1,
      metadata: { competenceDomain: 'CP.FR.L1', cp2025: true }
    },
    {
      titre: 'FranÃ§ais CP - Lecture PÃ©riode 2', 
      description: 'Extension des correspondances',
      niveau: 'CP' as const,
      matiere: 'FRANCAIS' as const,
      periode: 'P2' as const,
      ordre: 2,
      metadata: { competenceDomain: 'CP.FR.L1', cp2025: true }
    },
    {
      titre: 'MathÃ©matiques CP - Nombres PÃ©riode 1',
      description: 'Construction du nombre 0-20',
      niveau: 'CP' as const,
      matiere: 'MATHEMATIQUES' as const,
      periode: 'P1' as const,
      ordre: 1,
      metadata: { competenceDomain: 'CP.MA.N1', cp2025: true }
    }
  ];
  
  // Insert modules
  const insertedModules = await db.insert(modules).values(cpModules).returning();
  console.log(`âœ“ Created ${insertedModules.length} modules`);
  
  // Create sample exercises for each module
  const sampleExercises = [];
  
  // French Reading exercises
  const frenchModule = insertedModules.find(m => m.matiere === 'FRANCAIS');
  if (frenchModule) {
    sampleExercises.push(
      {
        titre: 'Reconnaissance du son [a]',
        consigne: 'Ã‰coute le mot et choisis le son que tu entends',
        type: 'QCM' as const,
        difficulte: 'decouverte' as const,
        moduleId: frenchModule.id,
        configuration: {
          question: "Quel son entends-tu dans 'PAPA' ?",
          choix: ['A', 'P', 'PA', 'AP'],
          bonneReponse: 'A',
          targetSound: 'a',
          audioRequired: true
        },
        metadata: { competenceCode: 'CP.FR.L1.1', autoGenerated: true },
        ordre: 1
      },
      {
        titre: 'Assemblage syllabique CV',
        consigne: 'Assemble les sons pour former une syllabe',
        type: 'DRAG_DROP' as const,
        difficulte: 'entrainement' as const,
        moduleId: frenchModule.id,
        configuration: {
          question: "Forme la syllabe 'MA'",
          dragItems: [
            { id: 'sound-m', content: 'M', category: 'consonnes' },
            { id: 'sound-a', content: 'A', category: 'voyelles' },
            { id: 'sound-t', content: 'T', category: 'consonnes' },
            { id: 'sound-i', content: 'I', category: 'voyelles' }
          ],
          zones: [
            { id: 'syllabe-zone', label: 'Glisse les sons ici', accepts: ['consonnes', 'voyelles'] }
          ],
          solution: ['M', 'A']
        },
        metadata: { competenceCode: 'CP.FR.L2.1', autoGenerated: true },
        ordre: 2
      }
    );
  }
  
  // Math exercises
  const mathModule = insertedModules.find(m => m.matiere === 'MATHEMATIQUES');
  if (mathModule) {
    sampleExercises.push(
      {
        titre: 'Compter jusqu\'Ã  5',
        consigne: 'Compte les objets et Ã©cris le nombre',
        type: 'CALCUL' as const,
        difficulte: 'decouverte' as const,
        moduleId: mathModule.id,
        configuration: {
          question: "Combien vois-tu d'Ã©toiles ?",
          objectCount: 3,
          imageUrl: '/images/count-stars-3.png',
          range: [1, 5],
          acceptedAnswers: [3]
        },
        metadata: { competenceCode: 'CP.MA.N1.1', autoGenerated: true },
        ordre: 1
      },
      {
        titre: 'Addition simple',
        consigne: 'Calcule cette addition',
        type: 'CALCUL' as const,
        difficulte: 'entrainement' as const,
        moduleId: mathModule.id,
        configuration: {
          question: "Combien font 2 + 3 ?",
          operation: '2 + 3',
          operandes: [2, 3],
          resultat: 5,
          aide: "Tu peux compter sur tes doigts"
        },
        metadata: { competenceCode: 'CP.MA.N3.1', autoGenerated: true },
        ordre: 2
      }
    );
  }
  
  // Insert exercises
  const insertedExercises = await db.insert(exercises).values(sampleExercises).returning();
  console.log(`âœ“ Created ${insertedExercises.length} sample exercises`);
  
  console.log('ðŸŒ± CP 2025 exercises seeded successfully!');
  return {
    modules: insertedModules,
    exercises: insertedExercises
  };
} 