# RevEd Kids Backend Environment Configuration
# Copy this file to your project root as .env

# =============================================================================
# Server Configuration
# =============================================================================
NODE_ENV=development
PORT=3000
HOST=0.0.0.0

# =============================================================================
# Database Configuration
# =============================================================================
DB_HOST=localhost
DB_PORT=3306
DB_USER=root
DB_PASSWORD=your_password_here
DB_NAME=reved_kids
DB_CONNECTION_LIMIT=20

# =============================================================================
# Redis Configuration (Optional - will fallback to memory cache)
# =============================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_ENABLED=true

# =============================================================================
# Security Configuration
# =============================================================================
# IMPORTANT: Generate strong secrets for production!
# Use: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-must-be-at-least-32-characters-long-change-this
JWT_EXPIRES_IN=24h
ENCRYPTION_KEY=your-super-secret-encryption-key-32-chars-change-this-too

# =============================================================================
# Rate Limiting
# =============================================================================
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW=900000

# =============================================================================
# File Upload Configuration
# =============================================================================
MAX_FILE_SIZE=10485760
UPLOAD_PATH=./uploads

# =============================================================================
# Monitoring & Performance
# =============================================================================
ENABLE_METRICS=true
METRICS_INTERVAL=60000

# =============================================================================
# Cache Configuration
# =============================================================================
CACHE_TTL=900
CACHE_MAX_SIZE=1000

# =============================================================================
# Performance Settings
# =============================================================================
REQUEST_TIMEOUT=30000
BODY_LIMIT=10485760

# =============================================================================
# CORS Configuration
# =============================================================================
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
CORS_CREDENTIALS=true

# =============================================================================
# Logging Configuration
# =============================================================================
LOG_LEVEL=info
LOG_FILE=

# =============================================================================
# WebSocket Configuration
# =============================================================================
WS_HEARTBEAT_INTERVAL=30000
WS_MAX_CONNECTIONS=1000

# =============================================================================
# Development Configuration
# =============================================================================
# Enable/disable features for development
ENABLE_SWAGGER=true
ENABLE_DEBUG=true
ENABLE_SEED_DATA=true

# =============================================================================
# Production Notes
# =============================================================================
# For production deployment:
# 1. Change NODE_ENV to 'production'
# 2. Generate strong JWT_SECRET and ENCRYPTION_KEY
# 3. Use environment-specific database credentials
# 4. Configure proper CORS_ORIGIN
# 5. Set appropriate LOG_LEVEL (warn or error)
# 6. Configure Redis for production use
# 7. Set up SSL/TLS certificates
# 8. Configure reverse proxy (Nginx/Apache)
# 9. Set up monitoring and alerting
# 10. Enable database backups 