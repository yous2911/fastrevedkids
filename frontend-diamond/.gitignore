# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
node_modules/
**/node_modules/
/.pnp
.pnp.js

# testing
/coverage
**/coverage/
.nyc_output

# production
/build
**/build/
/dist
**/dist/

# environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
**/.env*
env.backend
env.production

# logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.log

# runtime data
pids
*.pid
*.seed
*.pid.lock

# coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Database files
*.db
*.sqlite
*.sqlite3
reved_kids.db

# Upload directories
uploads/
**/uploads/

# SSL certificates
ssl/
**/ssl/

# Docker
.dockerignore

# Backup files
*.backup
*.bak

# TypeScript
*.tsbuildinfo

# Sentry
.sentryclirc

# Testing
.nyc_output/
coverage/
*.lcov

# Performance monitoring
.nyc_output

# Build artifacts
dist/
build/
out/

# Environment specific
.env.production
.env.staging
