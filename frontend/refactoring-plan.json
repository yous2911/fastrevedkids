{
  "timestamp": "2025-08-09T11:24:32.930Z",
  "summary": {
    "unusedCodeItems": 401,
    "duplicateBlocks": 75,
    "namingIssues": 277,
    "totalFiles": 224,
    "recommendations": [
      "High amount of unused code detected - consider aggressive cleanup",
      "Remove unused imports to reduce bundle size",
      "Extract duplicate code into shared utilities",
      "Establish and enforce consistent naming conventions"
    ]
  },
  "unusedCode": {
    "imports": [
      {
        "file": "App.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "App.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\AdvancedMascotSystem.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\AIPersonalityTester.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "components\\CrossBrowserMascot3D.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\dashboard\\EducationalDashboard.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\error\\ThreeDErrorBoundary.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "components\\ErrorBoundary\\ErrorBoundary.tsx",
        "import": "* as Sentry",
        "source": "@sentry/react",
        "type": "default"
      },
      {
        "file": "components\\exercise\\AdaptiveExerciseEngine.tsx",
        "import": "AdaptiveMetrics",
        "source": "../../services/adaptive-learning.service",
        "type": "named"
      },
      {
        "file": "components\\exercise\\ExerciseEngine.tsx",
        "import": "motion",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "components\\exercise\\ExerciseEngine.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "components\\exercise\\ExerciseEngine.tsx",
        "import": "Card",
        "source": "../ui/Card",
        "type": "named"
      },
      {
        "file": "components\\exercise\\ExerciseEngine.tsx",
        "import": "LoadingSpinner",
        "source": "../ui/LoadingSpinner",
        "type": "named"
      },
      {
        "file": "components\\fallback\\FallbackUISystem.tsx",
        "import": "isWebGLSupported",
        "source": "../../utils/browserCompatibility",
        "type": "named"
      },
      {
        "file": "components\\games\\FrenchMathsGame.tsx",
        "import": "type { DefiMath }",
        "source": "../../types/shared",
        "type": "default"
      },
      {
        "file": "components\\games\\FrenchPhonicsGame.tsx",
        "import": "type { DefiPhonique }",
        "source": "../../types/shared",
        "type": "default"
      },
      {
        "file": "components\\games\\FrenchPhonicsGame.tsx",
        "import": "CelebrationElements",
        "source": "../ui/FloatingElements",
        "type": "named"
      },
      {
        "file": "components\\games\\MathGameWrapper.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "components\\games\\MysteryWordGame.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\gdpr\\ConsentBanner.tsx",
        "import": "X",
        "source": "lucide-react",
        "type": "named"
      },
      {
        "file": "components\\gdpr\\GDPRDashboard.tsx",
        "import": "motion",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "components\\gdpr\\GDPRDashboard.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "components\\gdpr\\GDPRTestIntegration.tsx",
        "import": "useGDPR",
        "source": "../../hooks/useGDPR",
        "type": "named"
      },
      {
        "file": "components\\HybridMascotSystem.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\mascot\\MascotWardrobe.tsx",
        "import": "WAHOO_ANIMATIONS",
        "source": "../../types/wahoo.types",
        "type": "named"
      },
      {
        "file": "components\\MascotWardrobe3D.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\MobileOptimizedRenderer.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\revision\\RevisionManager.tsx",
        "import": "ProgressBar",
        "source": "../ui/ProgressBar",
        "type": "named"
      },
      {
        "file": "components\\routing\\AppRouter.tsx",
        "import": "ExerciseEngine",
        "source": "../exercise/ExerciseEngine",
        "type": "named"
      },
      {
        "file": "components\\routing\\AppRouter.tsx",
        "import": "ExercicePedagogique",
        "source": "../../types/api.types",
        "type": "named"
      },
      {
        "file": "components\\ui\\AdvancedMascotSystem.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\ui\\AdvancedParticleEngine.tsx",
        "import": "getMotionSafeClasses",
        "source": "../../utils/reducedMotionSupport",
        "type": "named"
      },
      {
        "file": "components\\ui\\ErrorBoundary.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\ui\\SparkyMascot3D.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\ui\\WardrobeSystem.tsx",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\WardrobeData.ts",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\Button.test.tsx",
        "import": "fireEvent",
        "source": "@testing-library/react",
        "type": "named"
      },
      {
        "file": "components\\__tests__\\Card.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\ConsentBanner.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\ExerciseCard.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\FloatingElements.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\Header.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\Header.test.tsx",
        "import": "fireEvent",
        "source": "@testing-library/react",
        "type": "named"
      },
      {
        "file": "components\\__tests__\\LoadingSpinner.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\Modal.test.tsx",
        "import": "waitFor",
        "source": "@testing-library/react",
        "type": "named"
      },
      {
        "file": "components\\__tests__\\ProgressBar.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\Sidebar.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "components\\__tests__\\Toast.test.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "hooks\\useAdaptiveLearning.ts",
        "import": "AdaptiveExerciseResponse",
        "source": "../services/exercise.service",
        "type": "named"
      },
      {
        "file": "hooks\\useAdaptiveLearning.ts",
        "import": "StudentProgress",
        "source": "../services/adaptive-learning.service",
        "type": "named"
      },
      {
        "file": "hooks\\useAuth.tsx",
        "import": "useEffect",
        "source": "react",
        "type": "named"
      },
      {
        "file": "hooks\\useAuth.tsx",
        "import": "apiService",
        "source": "../services/api.service",
        "type": "named"
      },
      {
        "file": "hooks\\useCP2025Data.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "MainApp.tsx",
        "import": "React",
        "source": "react",
        "type": "default"
      },
      {
        "file": "pages\\BreakGamesDemo.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "pages\\CrossBrowserTestSuite.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "pages\\ExerciseEngineTest.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "pages\\Exercises.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "pages\\Login.tsx",
        "import": "AnimatePresence",
        "source": "framer-motion",
        "type": "named"
      },
      {
        "file": "pages\\Profile.tsx",
        "import": "Eleve",
        "source": "../types/api.types",
        "type": "named"
      },
      {
        "file": "services\\api.service.ts",
        "import": "PaginatedResponse",
        "source": "../types/api.types",
        "type": "named"
      },
      {
        "file": "services\\cp2025.service.ts",
        "import": "NiveauScolaire",
        "source": "../types/cp2025.types",
        "type": "named"
      },
      {
        "file": "services\\cp2025.service.ts",
        "import": "Matiere",
        "source": "../types/cp2025.types",
        "type": "named"
      },
      {
        "file": "services\\revision.service.ts",
        "import": "ApiResponse",
        "source": "../types/api.types",
        "type": "named"
      },
      {
        "file": "services\\TutorialService.ts",
        "import": "AchievementReward",
        "source": "../types/wahoo.types",
        "type": "named"
      },
      {
        "file": "services\\WahooEngine.ts",
        "import": "WahooIntensity",
        "source": "../types/wahoo.types",
        "type": "named"
      },
      {
        "file": "tests\\test-utils.tsx",
        "import": "GDPRProvider",
        "source": "../contexts/GDPRContext",
        "type": "named"
      },
      {
        "file": "utils\\analytics.ts",
        "import": "* as Sentry",
        "source": "@sentry/react",
        "type": "default"
      },
      {
        "file": "utils\\secureAssetLoader.ts",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      },
      {
        "file": "utils\\sentry.ts",
        "import": "* as Sentry",
        "source": "@sentry/react",
        "type": "default"
      },
      {
        "file": "utils\\threeMemoryManager.ts",
        "import": "* as THREE",
        "source": "three",
        "type": "default"
      }
    ],
    "functions": [
      {
        "file": "components\\error\\ThreeDErrorBoundary.tsx",
        "name": "useThreeDErrorHandler",
        "line": 352,
        "type": "arrow"
      },
      {
        "file": "components\\fallback\\FallbackUISystem.tsx",
        "name": "handleCanvasContextError",
        "line": 430,
        "type": "arrow"
      },
      {
        "file": "components\\mobile\\BatteryOptimizedAnimations.tsx",
        "name": "useBatteryOptimizedAnimation",
        "line": 485,
        "type": "declaration"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "LazyRoute",
        "line": 113,
        "type": "declaration"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "preloadCriticalComponents",
        "line": 260,
        "type": "arrow"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "preloadRoleBasedComponents",
        "line": 268,
        "type": "arrow"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "preloadBasedOnInteraction",
        "line": 284,
        "type": "arrow"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "monitorLazyLoadingPerformance",
        "line": 307,
        "type": "arrow"
      },
      {
        "file": "components\\routing\\AppRouter.tsx",
        "name": "adaptExerciseForComponents",
        "line": 55,
        "type": "arrow"
      },
      {
        "file": "data\\mascotCollection.ts",
        "name": "getCollectionStats",
        "line": 595,
        "type": "arrow"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "createGDPRWrapper",
        "line": 98,
        "type": "arrow"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "StudentProfile",
        "line": 195,
        "type": "arrow"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "DataExportButton",
        "line": 211,
        "type": "arrow"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "GDPRRequestForm",
        "line": 226,
        "type": "arrow"
      },
      {
        "file": "hooks\\useCP2025Data.tsx",
        "name": "useCP2025Module",
        "line": 161,
        "type": "declaration"
      },
      {
        "file": "hooks\\useCP2025Data.tsx",
        "name": "useCP2025ExercisesByDifficulty",
        "line": 178,
        "type": "declaration"
      },
      {
        "file": "hooks\\useCP2025Data.tsx",
        "name": "useCP2025ExercisesByType",
        "line": 194,
        "type": "declaration"
      },
      {
        "file": "hooks\\useEducationalDashboard.ts",
        "name": "useEducationalDashboard",
        "line": 34,
        "type": "arrow"
      },
      {
        "file": "hooks\\useEducationData.ts",
        "name": "useEducationData",
        "line": 28,
        "type": "arrow"
      },
      {
        "file": "hooks\\useExerciseData.ts",
        "name": "useExerciseData",
        "line": 6,
        "type": "declaration"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useClientInfo",
        "line": 51,
        "type": "arrow"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRLabels",
        "line": 77,
        "type": "arrow"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRStorage",
        "line": 231,
        "type": "arrow"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRLoading",
        "line": 373,
        "type": "arrow"
      },
      {
        "file": "hooks\\useOfflineSupport.ts",
        "name": "useOfflineSupport",
        "line": 10,
        "type": "declaration"
      },
      {
        "file": "hooks\\usePerformanceOptimization.ts",
        "name": "usePerformanceOptimization",
        "line": 10,
        "type": "declaration"
      },
      {
        "file": "hooks\\usePerformanceTracking.ts",
        "name": "usePerformanceTracking",
        "line": 5,
        "type": "arrow"
      },
      {
        "file": "hooks\\useRevisions.ts",
        "name": "useRevisions",
        "line": 4,
        "type": "arrow"
      },
      {
        "file": "pages\\Dashboard.tsx",
        "name": "getProgressPercentage",
        "line": 270,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "toBeAccessible",
        "line": 53,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "measurePerformance",
        "line": 70,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "getByAriaLabel",
        "line": 78,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "getFocusedElement",
        "line": 94,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "tabToNextElement",
        "line": 96,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "tabToPreviousElement",
        "line": 100,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "setViewportSize",
        "line": 111,
        "type": "arrow"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "waitForAnimation",
        "line": 126,
        "type": "arrow"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "useFocusVisible",
        "line": 335,
        "type": "arrow"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "createSkipLink",
        "line": 362,
        "type": "arrow"
      },
      {
        "file": "utils\\analyticsSystem.tsx",
        "name": "useAnalytics",
        "line": 811,
        "type": "declaration"
      },
      {
        "file": "utils\\analyticsSystem.tsx",
        "name": "withAnalytics",
        "line": 839,
        "type": "declaration"
      },
      {
        "file": "utils\\animationOptimized.ts",
        "name": "withPerformanceMonitoring",
        "line": 466,
        "type": "declaration"
      },
      {
        "file": "utils\\browserCompatibility.ts",
        "name": "getOptimalRenderSettings",
        "line": 418,
        "type": "declaration"
      },
      {
        "file": "utils\\bundleOptimized.ts",
        "name": "initializeOptimizations",
        "line": 584,
        "type": "arrow"
      },
      {
        "file": "utils\\bundleOptimized.ts",
        "name": "measureOptimizationImpact",
        "line": 592,
        "type": "arrow"
      },
      {
        "file": "utils\\bundleOptimizer.ts",
        "name": "useBundleMonitoring",
        "line": 337,
        "type": "arrow"
      },
      {
        "file": "utils\\componentLoadTimeMonitor.tsx",
        "name": "withLoadTimeMonitoring",
        "line": 745,
        "type": "declaration"
      },
      {
        "file": "utils\\cp2025DataLoader.ts",
        "name": "loadCP2025FromURL",
        "line": 29,
        "type": "declaration"
      },
      {
        "file": "utils\\cp2025DataLoader.ts",
        "name": "mergeCP2025Data",
        "line": 47,
        "type": "declaration"
      },
      {
        "file": "utils\\cp2025DataLoader.ts",
        "name": "exportCP2025ToJSON",
        "line": 1291,
        "type": "declaration"
      },
      {
        "file": "utils\\errorTrackingSystem.ts",
        "name": "useErrorTracking",
        "line": 847,
        "type": "declaration"
      },
      {
        "file": "utils\\lazyOptimized.tsx",
        "name": "LazyWrapper",
        "line": 330,
        "type": "declaration"
      },
      {
        "file": "utils\\lazyOptimized.tsx",
        "name": "useViewportLazyLoad",
        "line": 375,
        "type": "declaration"
      },
      {
        "file": "utils\\mobileTouch.ts",
        "name": "useMobileTouch",
        "line": 668,
        "type": "declaration"
      },
      {
        "file": "utils\\performanceMonitoringHooks.ts",
        "name": "usePerformanceMonitoring",
        "line": 164,
        "type": "arrow"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "reportMessage",
        "line": 52,
        "type": "arrow"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "setUserContext",
        "line": 72,
        "type": "arrow"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "clearUserContext",
        "line": 83,
        "type": "arrow"
      },
      {
        "file": "utils\\toastUtils.ts",
        "name": "createToastProps",
        "line": 6,
        "type": "arrow"
      }
    ],
    "variables": [
      {
        "file": "components\\CP2025Demo.tsx",
        "name": "CP2025Demo",
        "line": 249,
        "type": "variable"
      },
      {
        "file": "components\\CP2025Demo.tsx",
        "name": "moduleExercises",
        "line": 324,
        "type": "variable"
      },
      {
        "file": "components\\CP2025ExtendedDemo.tsx",
        "name": "CP2025ExtendedDemo",
        "line": 189,
        "type": "variable"
      },
      {
        "file": "components\\CP2025ExtendedDemo.tsx",
        "name": "moduleExercises",
        "line": 288,
        "type": "variable"
      },
      {
        "file": "components\\CP2025UsageExample.tsx",
        "name": "CP2025UsageExample",
        "line": 5,
        "type": "variable"
      },
      {
        "file": "components\\dashboard\\EducationalDashboard.tsx",
        "name": "equippedItems",
        "line": 224,
        "type": "variable"
      },
      {
        "file": "components\\debug\\WardrobeTestingInterface.tsx",
        "name": "testQueueRef",
        "line": 105,
        "type": "variable"
      },
      {
        "file": "components\\error\\ThreeDErrorBoundary.tsx",
        "name": "useThreeDErrorHandler",
        "line": 352,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\AdaptiveExerciseEngine.tsx",
        "name": "AdaptiveExerciseEngine",
        "line": 22,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\AdaptiveExerciseEngine.tsx",
        "name": "handleAnswerChange",
        "line": 100,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\ExerciseCard.tsx",
        "name": "ExerciseCard",
        "line": 17,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\ExerciseDragDrop.tsx",
        "name": "ExerciseDragDrop",
        "line": 13,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\ExerciseEngine.tsx",
        "name": "ExerciseEngine",
        "line": 87,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\ExerciseEngine.tsx",
        "name": "exerciseHints",
        "line": 242,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\ExerciseManager.tsx",
        "name": "ExerciseManager",
        "line": 34,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\ExerciseManager.tsx",
        "name": "handleExerciseSkip",
        "line": 90,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\SimpleExerciseComponent.tsx",
        "name": "SimpleExerciseComponent",
        "line": 11,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\types\\ExerciseCalcul.tsx",
        "name": "ExerciseCalcul",
        "line": 14,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\types\\ExerciseDragDrop.tsx",
        "name": "ExerciseDragDrop",
        "line": 28,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\types\\ExerciseQCM.tsx",
        "name": "ExerciseQCM",
        "line": 14,
        "type": "variable"
      },
      {
        "file": "components\\exercise\\types\\ExerciseTextLibre.tsx",
        "name": "ExerciseTextLibre",
        "line": 14,
        "type": "variable"
      },
      {
        "file": "components\\fallback\\FallbackUISystem.tsx",
        "name": "LoadingState",
        "line": 271,
        "type": "variable"
      },
      {
        "file": "components\\fallback\\FallbackUISystem.tsx",
        "name": "ErrorMessage",
        "line": 330,
        "type": "variable"
      },
      {
        "file": "components\\fallback\\FallbackUISystem.tsx",
        "name": "handleCanvasContextError",
        "line": 430,
        "type": "variable"
      },
      {
        "file": "components\\games\\EnhancedMathGame.tsx",
        "name": "EnhancedMathGame",
        "line": 10,
        "type": "variable"
      },
      {
        "file": "components\\games\\FrenchPhonicsGame.tsx",
        "name": "FrenchPhonicsGame",
        "line": 35,
        "type": "variable"
      },
      {
        "file": "components\\games\\FrenchPhonicsGame.tsx",
        "name": "challengeResult",
        "line": 236,
        "type": "variable"
      },
      {
        "file": "components\\games\\FrenchPhonicsGame.tsx",
        "name": "attemptedAnswer",
        "line": 259,
        "type": "variable"
      },
      {
        "file": "components\\games\\MathGameWrapper.tsx",
        "name": "MathGameWrapper",
        "line": 19,
        "type": "variable"
      },
      {
        "file": "components\\games\\MathGameWrapper.tsx",
        "name": "handleGameComplete",
        "line": 44,
        "type": "variable"
      },
      {
        "file": "components\\handwriting\\hooks\\useCP2025Backend.ts",
        "name": "useCP2025Backend",
        "line": 17,
        "type": "variable"
      },
      {
        "file": "components\\handwriting\\types\\ExerciseTypes.ts",
        "name": "generatePerfectTrace",
        "line": 128,
        "type": "variable"
      },
      {
        "file": "components\\handwriting\\utils\\EvaluationSystem.ts",
        "name": "evaluateCompetence",
        "line": 24,
        "type": "variable"
      },
      {
        "file": "components\\handwriting\\utils\\PressureSystem.ts",
        "name": "calculatePressureState",
        "line": 23,
        "type": "variable"
      },
      {
        "file": "components\\KioskModeActivator.tsx",
        "name": "KioskModeActivator",
        "line": 9,
        "type": "variable"
      },
      {
        "file": "components\\layout\\FocusedLayout.tsx",
        "name": "FocusedLayout",
        "line": 14,
        "type": "variable"
      },
      {
        "file": "components\\layout\\Header.tsx",
        "name": "Header",
        "line": 14,
        "type": "variable"
      },
      {
        "file": "components\\layout\\Layout.tsx",
        "name": "Layout",
        "line": 15,
        "type": "variable"
      },
      {
        "file": "components\\mascot\\MascotWardrobe.tsx",
        "name": "MascotWardrobe",
        "line": 16,
        "type": "variable"
      },
      {
        "file": "components\\MascotWardrobe3D.tsx",
        "name": "loadAssetSecurely",
        "line": 261,
        "type": "variable"
      },
      {
        "file": "components\\MascotWardrobe3D.tsx",
        "name": "sanitizedMascotType",
        "line": 564,
        "type": "variable"
      },
      {
        "file": "components\\mobile\\BatteryOptimizedAnimations.tsx",
        "name": "BatteryAnimationVariants",
        "line": 570,
        "type": "variable"
      },
      {
        "file": "components\\MobileOptimizedRenderer.tsx",
        "name": "objectPool",
        "line": 219,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyImage.tsx",
        "name": "LazyImage",
        "line": 14,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "DashboardLazy",
        "line": 129,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "ExercisesLazy",
        "line": 137,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "ProfileLazy",
        "line": 146,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "ProgressLazy",
        "line": 153,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "AdminPanelLazy",
        "line": 161,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "MascotSystemLazy",
        "line": 169,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "WardrobeSystemLazy",
        "line": 176,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "CrossBrowserMascot3DLazy",
        "line": 183,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "ExerciseEngineTestLazy",
        "line": 191,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "XPSystemThemeTestLazy",
        "line": 198,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "WardrobeSystemTestLazy",
        "line": 205,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "ComprehensiveTestSuiteLazy",
        "line": 212,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "CrossBrowserTestSuiteLazy",
        "line": 219,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "ErrorHandlingTestSuiteLazy",
        "line": 226,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "AnalyticsDashboardLazy",
        "line": 234,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "AIStateVisualizationLazy",
        "line": 241,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "Scene3DInspectorLazy",
        "line": 248,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "preloadCriticalComponents",
        "line": 260,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "preloadRoleBasedComponents",
        "line": 268,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "preloadBasedOnInteraction",
        "line": 284,
        "type": "variable"
      },
      {
        "file": "components\\optimization\\LazyRoutes.tsx",
        "name": "monitorLazyLoadingPerformance",
        "line": 307,
        "type": "variable"
      },
      {
        "file": "components\\revision\\RevisionManager.tsx",
        "name": "RevisionManager",
        "line": 41,
        "type": "variable"
      },
      {
        "file": "components\\revision\\RevisionManager.tsx",
        "name": "handleExerciseComplete",
        "line": 84,
        "type": "variable"
      },
      {
        "file": "components\\routing\\AppRouter.tsx",
        "name": "adaptExerciseForComponents",
        "line": 55,
        "type": "variable"
      },
      {
        "file": "components\\ui\\AdvancedParticleEngine.tsx",
        "name": "motionPreferences",
        "line": 50,
        "type": "variable"
      },
      {
        "file": "components\\ui\\AnimatedCard.tsx",
        "name": "AnimatedCard",
        "line": 102,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Card.tsx",
        "name": "Card",
        "line": 39,
        "type": "variable"
      },
      {
        "file": "components\\ui\\FloatingElements.tsx",
        "name": "SparkleElements",
        "line": 90,
        "type": "variable"
      },
      {
        "file": "components\\ui\\FloatingElements.tsx",
        "name": "MagicElements",
        "line": 103,
        "type": "variable"
      },
      {
        "file": "components\\ui\\FloatingElements.tsx",
        "name": "CelebrationElements",
        "line": 116,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Header.tsx",
        "name": "Header",
        "line": 50,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Header.tsx",
        "name": "PageHeader",
        "line": 507,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Input.tsx",
        "name": "SearchInput",
        "line": 444,
        "type": "variable"
      },
      {
        "file": "components\\ui\\LazyComponentLoader.tsx",
        "name": "LazyComponentLoader",
        "line": 12,
        "type": "variable"
      },
      {
        "file": "components\\ui\\LoadingSpinner.tsx",
        "name": "LoadingSpinner",
        "line": 25,
        "type": "variable"
      },
      {
        "file": "components\\ui\\NextLevelXPSystem.tsx",
        "name": "highContrast",
        "line": 111,
        "type": "variable"
      },
      {
        "file": "components\\ui\\NextLevelXPSystem.tsx",
        "name": "waveFrequency",
        "line": 339,
        "type": "variable"
      },
      {
        "file": "components\\ui\\NextLevelXPSystem.tsx",
        "name": "prevX",
        "line": 499,
        "type": "variable"
      },
      {
        "file": "components\\ui\\NextLevelXPSystem.tsx",
        "name": "prevY",
        "line": 500,
        "type": "variable"
      },
      {
        "file": "components\\ui\\ProgressBar.tsx",
        "name": "ProgressBar",
        "line": 11,
        "type": "variable"
      },
      {
        "file": "components\\ui\\RobustXPSystem.tsx",
        "name": "containerRef",
        "line": 59,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Toast.tsx",
        "name": "ProgressBar",
        "line": 145,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Toast.tsx",
        "name": "SparkleElements",
        "line": 208,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Toast.tsx",
        "name": "MagicElements",
        "line": 254,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Toast.tsx",
        "name": "CelebrationElements",
        "line": 302,
        "type": "variable"
      },
      {
        "file": "components\\ui\\Toast.tsx",
        "name": "Input",
        "line": 444,
        "type": "variable"
      },
      {
        "file": "components\\WardrobeData.ts",
        "name": "createItemMesh",
        "line": 296,
        "type": "variable"
      },
      {
        "file": "components\\WardrobeSystem.tsx",
        "name": "isHighContrast",
        "line": 74,
        "type": "variable"
      },
      {
        "file": "config\\soundEffects.ts",
        "name": "getSoundsByCategory",
        "line": 505,
        "type": "variable"
      },
      {
        "file": "config\\soundEffects.ts",
        "name": "getSoundById",
        "line": 509,
        "type": "variable"
      },
      {
        "file": "config\\soundEffects.ts",
        "name": "getAllSoundCategories",
        "line": 513,
        "type": "variable"
      },
      {
        "file": "context\\KioskModeContext.tsx",
        "name": "KioskModeActivator",
        "line": 289,
        "type": "variable"
      },
      {
        "file": "contexts\\GDPRContext.tsx",
        "name": "withGDPR",
        "line": 361,
        "type": "variable"
      },
      {
        "file": "contexts\\GDPRContext.tsx",
        "name": "useGDPRPermissions",
        "line": 372,
        "type": "variable"
      },
      {
        "file": "data\\mascotCollection.ts",
        "name": "getCollectionStats",
        "line": 595,
        "type": "variable"
      },
      {
        "file": "data\\mascotCollection.ts",
        "name": "unlockItem",
        "line": 625,
        "type": "variable"
      },
      {
        "file": "data\\mascotCollection.ts",
        "name": "equipItem",
        "line": 635,
        "type": "variable"
      },
      {
        "file": "data\\mascotCollection.ts",
        "name": "unequipItem",
        "line": 651,
        "type": "variable"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "createGDPRWrapper",
        "line": 98,
        "type": "variable"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "quickValidation",
        "line": 122,
        "type": "variable"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "StudentProfile",
        "line": 195,
        "type": "variable"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "DataExportButton",
        "line": 211,
        "type": "variable"
      },
      {
        "file": "gdpr\\index.ts",
        "name": "GDPRRequestForm",
        "line": 226,
        "type": "variable"
      },
      {
        "file": "hooks\\useEducationalDashboard.ts",
        "name": "useEducationalDashboard",
        "line": 34,
        "type": "variable"
      },
      {
        "file": "hooks\\useEducationData.ts",
        "name": "useEducationData",
        "line": 28,
        "type": "variable"
      },
      {
        "file": "hooks\\useErrorHandler.ts",
        "name": "useErrorHandler",
        "line": 19,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPR.ts",
        "name": "useGDPR",
        "line": 341,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPR.ts",
        "name": "useConsentCheck",
        "line": 412,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRConnection",
        "line": 19,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useClientInfo",
        "line": 51,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRLabels",
        "line": 77,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRValidation",
        "line": 130,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRStorage",
        "line": 231,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRNotifications",
        "line": 315,
        "type": "variable"
      },
      {
        "file": "hooks\\useGDPRUtils.ts",
        "name": "useGDPRLoading",
        "line": 373,
        "type": "variable"
      },
      {
        "file": "hooks\\useHaptic.ts",
        "name": "useHaptic",
        "line": 10,
        "type": "variable"
      },
      {
        "file": "hooks\\useMascotData.ts",
        "name": "useMascotData",
        "line": 20,
        "type": "variable"
      },
      {
        "file": "hooks\\useMascotData.ts",
        "name": "wordCount",
        "line": 148,
        "type": "variable"
      },
      {
        "file": "hooks\\usePerformanceTracking.ts",
        "name": "usePerformanceTracking",
        "line": 5,
        "type": "variable"
      },
      {
        "file": "hooks\\useRevisions.ts",
        "name": "useRevisions",
        "line": 4,
        "type": "variable"
      },
      {
        "file": "hooks\\useSecurityHeaders.ts",
        "name": "useSecurityHeaders",
        "line": 13,
        "type": "variable"
      },
      {
        "file": "hooks\\useSound.ts",
        "name": "useSound",
        "line": 10,
        "type": "variable"
      },
      {
        "file": "hooks\\useSound.ts",
        "name": "sounds",
        "line": 12,
        "type": "variable"
      },
      {
        "file": "hooks\\useStudentData.ts",
        "name": "useStudentData",
        "line": 20,
        "type": "variable"
      },
      {
        "file": "hooks\\useWahooEngine.ts",
        "name": "useWahooEngine",
        "line": 26,
        "type": "variable"
      },
      {
        "file": "hooks\\useWardrobeAnalytics.ts",
        "name": "useWardrobeAnalytics",
        "line": 31,
        "type": "variable"
      },
      {
        "file": "hooks\\useXPSystemAnalytics.ts",
        "name": "useXPSystemAnalytics",
        "line": 29,
        "type": "variable"
      },
      {
        "file": "pages\\CrossBrowserTestSuite.tsx",
        "name": "testScenarios",
        "line": 49,
        "type": "variable"
      },
      {
        "file": "pages\\CrossBrowserTestSuite.tsx",
        "name": "monitorPerformance",
        "line": 93,
        "type": "variable"
      },
      {
        "file": "pages\\Dashboard.tsx",
        "name": "getProgressPercentage",
        "line": 270,
        "type": "variable"
      },
      {
        "file": "pages\\Dashboard.tsx",
        "name": "getStreakMessage",
        "line": 275,
        "type": "variable"
      },
      {
        "file": "pages\\lazy\\AdminPanelLazy.tsx",
        "name": "AdminPanelLazy",
        "line": 3,
        "type": "variable"
      },
      {
        "file": "pages\\lazy\\DashboardLazy.tsx",
        "name": "DashboardLazy",
        "line": 3,
        "type": "variable"
      },
      {
        "file": "pages\\lazy\\ExercisesLazy.tsx",
        "name": "ExercisesLazy",
        "line": 3,
        "type": "variable"
      },
      {
        "file": "pages\\lazy\\ProfileLazy.tsx",
        "name": "ProfileLazy",
        "line": 3,
        "type": "variable"
      },
      {
        "file": "pages\\lazy\\ProgressLazy.tsx",
        "name": "ProgressLazy",
        "line": 3,
        "type": "variable"
      },
      {
        "file": "reportWebVitals.ts",
        "name": "monitorWebVitals",
        "line": 24,
        "type": "variable"
      },
      {
        "file": "services\\adaptive-learning.service.ts",
        "name": "adaptiveLearningService",
        "line": 558,
        "type": "variable"
      },
      {
        "file": "services\\cp2025.service.ts",
        "name": "cp2025Service",
        "line": 133,
        "type": "variable"
      },
      {
        "file": "services\\defisService.ts",
        "name": "defisService",
        "line": 70,
        "type": "variable"
      },
      {
        "file": "services\\education.service.ts",
        "name": "educationService",
        "line": 158,
        "type": "variable"
      },
      {
        "file": "services\\enhanced-api.service.ts",
        "name": "enhancedApiService",
        "line": 352,
        "type": "variable"
      },
      {
        "file": "services\\exercise.service.ts",
        "name": "exerciseService",
        "line": 379,
        "type": "variable"
      },
      {
        "file": "services\\mathsService.ts",
        "name": "mathsService",
        "line": 148,
        "type": "variable"
      },
      {
        "file": "services\\progress.service.ts",
        "name": "progressService",
        "line": 127,
        "type": "variable"
      },
      {
        "file": "services\\revision.service.ts",
        "name": "revisionService",
        "line": 337,
        "type": "variable"
      },
      {
        "file": "services\\student.service.ts",
        "name": "studentService",
        "line": 110,
        "type": "variable"
      },
      {
        "file": "services\\TutorialService.ts",
        "name": "tutorialService",
        "line": 310,
        "type": "variable"
      },
      {
        "file": "services\\TutorialService.ts",
        "name": "moduleProgressionService",
        "line": 312,
        "type": "variable"
      },
      {
        "file": "services\\WahooEngine.ts",
        "name": "wahooEngine",
        "line": 326,
        "type": "variable"
      },
      {
        "file": "test-lazy-loading.tsx",
        "name": "TestLazyLoading",
        "line": 6,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockFramerMotion",
        "line": 4,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockUseSound",
        "line": 101,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockUseHaptic",
        "line": 110,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockThree",
        "line": 117,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockHowler",
        "line": 133,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockSessionStorage",
        "line": 172,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockFetch",
        "line": 177,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockResizeObserver",
        "line": 187,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockIntersectionObserver",
        "line": 194,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockMediaDevices",
        "line": 201,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockGeolocation",
        "line": 211,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockClipboard",
        "line": 226,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "mockNotification",
        "line": 232,
        "type": "variable"
      },
      {
        "file": "tests\\mocks\\index.ts",
        "name": "testData",
        "line": 241,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "mockStudent",
        "line": 32,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "mockExercise",
        "line": 42,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "toBeAccessible",
        "line": 53,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "browsers",
        "line": 62,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "measurePerformance",
        "line": 70,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "getByAriaLabel",
        "line": 78,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "getByRole",
        "line": 82,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "getFocusedElement",
        "line": 94,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "tabToNextElement",
        "line": 96,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "tabToPreviousElement",
        "line": 100,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "getColorContrast",
        "line": 105,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "setViewportSize",
        "line": 111,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "waitForAnimation",
        "line": 126,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "mockAudioContext",
        "line": 131,
        "type": "variable"
      },
      {
        "file": "tests\\test-utils.tsx",
        "name": "mockVibration",
        "line": 145,
        "type": "variable"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "getUserAgent",
        "line": 299,
        "type": "variable"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "getClientIP",
        "line": 303,
        "type": "variable"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "isConsentExpired",
        "line": 309,
        "type": "variable"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "isRequestOverdue",
        "line": 313,
        "type": "variable"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "getRequestDeadline",
        "line": 318,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "useScreenReader",
        "line": 105,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "useReducedMotion",
        "line": 114,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "useFocusManagement",
        "line": 133,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "useKeyboardNavigation",
        "line": 175,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "generateAriaLabel",
        "line": 243,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "checkColorContrast",
        "line": 268,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "useHighContrast",
        "line": 275,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "getAccessibleColor",
        "line": 311,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "getAnimationProps",
        "line": 330,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "useFocusVisible",
        "line": 335,
        "type": "variable"
      },
      {
        "file": "utils\\accessibility.ts",
        "name": "createSkipLink",
        "line": 362,
        "type": "variable"
      },
      {
        "file": "utils\\analytics.ts",
        "name": "performanceMonitor",
        "line": 142,
        "type": "variable"
      },
      {
        "file": "utils\\animationOptimized.ts",
        "name": "animationManager",
        "line": 490,
        "type": "variable"
      },
      {
        "file": "utils\\assetOptimized.ts",
        "name": "assetManager",
        "line": 646,
        "type": "variable"
      },
      {
        "file": "utils\\bundleOptimized.ts",
        "name": "initializeOptimizations",
        "line": 584,
        "type": "variable"
      },
      {
        "file": "utils\\bundleOptimized.ts",
        "name": "measureOptimizationImpact",
        "line": 592,
        "type": "variable"
      },
      {
        "file": "utils\\bundleOptimizer.ts",
        "name": "originalPush",
        "line": 106,
        "type": "variable"
      },
      {
        "file": "utils\\bundleOptimizer.ts",
        "name": "useBundleMonitoring",
        "line": 337,
        "type": "variable"
      },
      {
        "file": "utils\\bundleOptimizer.ts",
        "name": "bundleOptimizer",
        "line": 353,
        "type": "variable"
      },
      {
        "file": "utils\\cssOptimized.ts",
        "name": "optimizedMixins",
        "line": 507,
        "type": "variable"
      },
      {
        "file": "utils\\cssOptimized.ts",
        "name": "responsive",
        "line": 555,
        "type": "variable"
      },
      {
        "file": "utils\\cssOptimized.ts",
        "name": "createOptimizedStyles",
        "line": 581,
        "type": "variable"
      },
      {
        "file": "utils\\lazyLoading.ts",
        "name": "createLazyComponent",
        "line": 9,
        "type": "variable"
      },
      {
        "file": "utils\\lazyLoading.ts",
        "name": "preloadRouteComponents",
        "line": 63,
        "type": "variable"
      },
      {
        "file": "utils\\lazyOptimized.tsx",
        "name": "LazyComponents",
        "line": 398,
        "type": "variable"
      },
      {
        "file": "utils\\lazyOptimized.tsx",
        "name": "lazyManager",
        "line": 524,
        "type": "variable"
      },
      {
        "file": "utils\\lazyOptimized.tsx",
        "name": "createLazyRoute",
        "line": 529,
        "type": "variable"
      },
      {
        "file": "utils\\memoryLeakDetector.ts",
        "name": "useMemoryManagement",
        "line": 428,
        "type": "variable"
      },
      {
        "file": "utils\\memoryLeakDetector.ts",
        "name": "memoryLeakDetector",
        "line": 524,
        "type": "variable"
      },
      {
        "file": "utils\\mobileFrameRate.ts",
        "name": "mobileFrameRate",
        "line": 681,
        "type": "variable"
      },
      {
        "file": "utils\\mobileOptimized.ts",
        "name": "lastTime",
        "line": 612,
        "type": "variable"
      },
      {
        "file": "utils\\mobileOptimized.ts",
        "name": "mobileDetector",
        "line": 702,
        "type": "variable"
      },
      {
        "file": "utils\\mobileTouch.ts",
        "name": "TouchUtils",
        "line": 712,
        "type": "variable"
      },
      {
        "file": "utils\\performanceMonitoringHooks.ts",
        "name": "usePerformanceMonitoring",
        "line": 164,
        "type": "variable"
      },
      {
        "file": "utils\\performanceObserver.ts",
        "name": "customPerformanceObserver",
        "line": 71,
        "type": "variable"
      },
      {
        "file": "utils\\propValidation.ts",
        "name": "validateXPSystemProps",
        "line": 184,
        "type": "variable"
      },
      {
        "file": "utils\\propValidation.ts",
        "name": "validateMascotWardrobe3DProps",
        "line": 242,
        "type": "variable"
      },
      {
        "file": "utils\\propValidation.ts",
        "name": "validateWardrobeSystemProps",
        "line": 295,
        "type": "variable"
      },
      {
        "file": "utils\\propValidation.ts",
        "name": "validateProps",
        "line": 344,
        "type": "variable"
      },
      {
        "file": "utils\\propValidation.ts",
        "name": "useValidatedProps",
        "line": 375,
        "type": "variable"
      },
      {
        "file": "utils\\secureApi.ts",
        "name": "secureApi",
        "line": 127,
        "type": "variable"
      },
      {
        "file": "utils\\secureAssetLoader.ts",
        "name": "applySecurity3DCSP",
        "line": 328,
        "type": "variable"
      },
      {
        "file": "utils\\secureAssetLoader.ts",
        "name": "checkAssetLoadingRateLimit",
        "line": 342,
        "type": "variable"
      },
      {
        "file": "utils\\secureAssetLoader.ts",
        "name": "secureAssetCache",
        "line": 441,
        "type": "variable"
      },
      {
        "file": "utils\\securityValidation.ts",
        "name": "validateMascotCustomization",
        "line": 161,
        "type": "variable"
      },
      {
        "file": "utils\\securityValidation.ts",
        "name": "validateItemUnlockRequirements",
        "line": 227,
        "type": "variable"
      },
      {
        "file": "utils\\securityValidation.ts",
        "name": "validateAssetPath",
        "line": 272,
        "type": "variable"
      },
      {
        "file": "utils\\securityValidation.ts",
        "name": "checkRateLimit",
        "line": 326,
        "type": "variable"
      },
      {
        "file": "utils\\securityValidation.ts",
        "name": "validateXPSystemProps",
        "line": 355,
        "type": "variable"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "initializeSentry",
        "line": 5,
        "type": "variable"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "reportError",
        "line": 34,
        "type": "variable"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "reportMessage",
        "line": 52,
        "type": "variable"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "setUserContext",
        "line": 72,
        "type": "variable"
      },
      {
        "file": "utils\\sentry.ts",
        "name": "clearUserContext",
        "line": 83,
        "type": "variable"
      },
      {
        "file": "utils\\threeJsMemoryManager.ts",
        "name": "useThreeJSMemory",
        "line": 485,
        "type": "variable"
      },
      {
        "file": "utils\\threeJsMemoryManager.ts",
        "name": "threeJSMemoryManager",
        "line": 500,
        "type": "variable"
      },
      {
        "file": "utils\\toastUtils.ts",
        "name": "createToastProps",
        "line": 6,
        "type": "variable"
      },
      {
        "file": "utils\\validation.ts",
        "name": "validateEmail",
        "line": 2,
        "type": "variable"
      },
      {
        "file": "utils\\validation.ts",
        "name": "validateRequired",
        "line": 7,
        "type": "variable"
      },
      {
        "file": "utils\\validation.ts",
        "name": "validateRange",
        "line": 13,
        "type": "variable"
      },
      {
        "file": "utils\\wardrobeUnlockValidation.ts",
        "name": "validateMultipleItemUnlocks",
        "line": 266,
        "type": "variable"
      },
      {
        "file": "utils\\wardrobeUnlockValidation.ts",
        "name": "getUnlockedItems",
        "line": 297,
        "type": "variable"
      },
      {
        "file": "utils\\wardrobeUnlockValidation.ts",
        "name": "getItemsNearUnlock",
        "line": 321,
        "type": "variable"
      },
      {
        "file": "utils\\wardrobeUnlockValidation.ts",
        "name": "clearUnlockData",
        "line": 361,
        "type": "variable"
      },
      {
        "file": "utils\\wardrobeUnlockValidation.ts",
        "name": "getUnlockStatistics",
        "line": 367,
        "type": "variable"
      },
      {
        "file": "utils\\wardrobeUnlockValidation.ts",
        "name": "validateItemMascotCompatibility",
        "line": 395,
        "type": "variable"
      }
    ],
    "components": [],
    "types": [
      {
        "file": "components\\ui\\NextLevelXPSystem.tsx",
        "name": "ThemeConfig",
        "line": 17,
        "kind": "interface"
      },
      {
        "file": "react-app-env.d.ts",
        "name": "IntrinsicElements",
        "line": 6,
        "kind": "interface"
      },
      {
        "file": "types\\exercise.types.ts",
        "name": "ExerciseValidationResult",
        "line": 25,
        "kind": "interface"
      },
      {
        "file": "types\\exercise.types.ts",
        "name": "BaseExerciseProps",
        "line": 33,
        "kind": "interface"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "StudentDataExportResponse",
        "line": 178,
        "kind": "interface"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "ParentalConsentFormProps",
        "line": 201,
        "kind": "interface"
      },
      {
        "file": "types\\gdpr.types.ts",
        "name": "GDPRRequestFormProps",
        "line": 207,
        "kind": "interface"
      },
      {
        "file": "types\\shared.ts",
        "name": "ProgressionEleve",
        "line": 111,
        "kind": "interface"
      },
      {
        "file": "types\\wahoo.types.ts",
        "name": "TutorialStep",
        "line": 41,
        "kind": "interface"
      },
      {
        "file": "types\\wahoo.types.ts",
        "name": "WahooModule",
        "line": 85,
        "kind": "interface"
      },
      {
        "file": "types\\wahoo.types.ts",
        "name": "ExerciseSeries",
        "line": 104,
        "kind": "interface"
      },
      {
        "file": "types\\wahoo.types.ts",
        "name": "AnimatedLesson",
        "line": 184,
        "kind": "interface"
      },
      {
        "file": "types\\wahoo.types.ts",
        "name": "EducationalMetrics",
        "line": 226,
        "kind": "interface"
      },
      {
        "file": "types\\wahoo.types.ts",
        "name": "SequencingTask",
        "line": 267,
        "kind": "interface"
      },
      {
        "file": "types\\wahoo.types.ts",
        "name": "LessonEngineEvent",
        "line": 280,
        "kind": "interface"
      },
      {
        "file": "utils\\analyticsSystem.tsx",
        "name": "PerformanceAnalytics",
        "line": 102,
        "kind": "interface"
      }
    ]
  },
  "duplicates": [
    {
      "hash": 1045086261,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 6,
          "code": "interface MascotAIState {\nmood: 'happy' | 'excited' | 'focused' | 'tired' | 'curious' | 'proud' | 'encouraging';\nenergy: number; // 0-100\nattention: number; // 0-100\nrelationship: number; // 0-100 (bond with student)\npersonality: {\nextroversion: number;\npatience: number;\nplayfulness: number;\nintelligence: number;\n};\nmemory: {\nlastInteraction: Date;\nfavoriteActivities: string[];\nstudentProgress: number;\nmistakePatterns: string[];\n};\n}",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 7,
          "code": "interface MascotAIState {\nmood: 'happy' | 'excited' | 'focused' | 'tired' | 'curious' | 'proud' | 'encouraging';\nenergy: number; // 0-100\nattention: number; // 0-100\nrelationship: number; // 0-100 (bond with student)\npersonality: {\nextroversion: number;\npatience: number;\nplayfulness: number;\nintelligence: number;\n};\nmemory: {\nlastInteraction: Date;\nfavoriteActivities: string[];\nstudentProgress: number;\nmistakePatterns: string[];\n};\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 6,
          "code": "interface MascotAIState {\nmood: 'happy' | 'excited' | 'focused' | 'tired' | 'curious' | 'proud' | 'encouraging';\nenergy: number; // 0-100\nattention: number; // 0-100\nrelationship: number; // 0-100 (bond with student)\npersonality: {\nextroversion: number;\npatience: number;\nplayfulness: number;\nintelligence: number;\n};\nmemory: {\nlastInteraction: Date;\nfavoriteActivities: string[];\nstudentProgress: number;\nmistakePatterns: string[];\n};\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1484815726,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 25,
          "code": "interface AdvancedMascotProps {\nmascotType: 'dragon' | 'fairy' | 'robot' | 'cat' | 'owl';\nstudentData: {\nlevel: number;\nxp: number;\ncurrentStreak: number;\ntimeOfDay: 'morning' | 'afternoon' | 'evening';\nrecentPerformance: 'struggling' | 'average' | 'excellent';\n};\ncurrentActivity: 'idle' | 'exercise' | 'achievement' | 'mistake' | 'learning';\nequippedItems: string[];\nonMascotInteraction: (interaction: string) => void;\nonEmotionalStateChange: (state: MascotAIState) => void;\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 25,
          "code": "interface AdvancedMascotProps {\nmascotType: 'dragon' | 'fairy' | 'robot' | 'cat' | 'owl';\nstudentData: {\nlevel: number;\nxp: number;\ncurrentStreak: number;\ntimeOfDay: 'morning' | 'afternoon' | 'evening';\nrecentPerformance: 'struggling' | 'average' | 'excellent';\n};\ncurrentActivity: 'idle' | 'exercise' | 'achievement' | 'mistake' | 'learning';\nequippedItems: string[];\nonMascotInteraction: (interaction: string) => void;\nonEmotionalStateChange: (state: MascotAIState) => void;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 2084802703,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 57,
          "code": "const [aiState, setAiState] = useState<MascotAIState>({\nmood: 'happy',\nenergy: 80,\nattention: 90,\nrelationship: 50,\npersonality: {\nextroversion: 0.7,\npatience: 0.6,\nplayfulness: 0.8,\nintelligence: 0.9\n},\nmemory: {\nlastInteraction: new Date(),\nfavoriteActivities: ['exercises', 'achievements'],\nstudentProgress: studentData.level,\nmistakePatterns: []\n}\n});",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 58,
          "code": "const [aiState, setAiState] = useState<MascotAIState>({\nmood: 'happy',\nenergy: 80,\nattention: 90,\nrelationship: 50,\npersonality: {\nextroversion: 0.7,\npatience: 0.6,\nplayfulness: 0.8,\nintelligence: 0.9\n},\nmemory: {\nlastInteraction: new Date(),\nfavoriteActivities: ['exercises', 'achievements'],\nstudentProgress: studentData.level,\nmistakePatterns: []\n}\n});",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 57,
          "code": "const [aiState, setAiState] = useState<MascotAIState>({\nmood: 'happy',\nenergy: 80,\nattention: 90,\nrelationship: 50,\npersonality: {\nextroversion: 0.7,\npatience: 0.6,\nplayfulness: 0.8,\nintelligence: 0.9\n},\nmemory: {\nlastInteraction: new Date(),\nfavoriteActivities: ['exercises', 'achievements'],\nstudentProgress: studentData.level,\nmistakePatterns: []\n}\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1717578519,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 532,
          "code": "particleGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\nconst particleMaterial = new THREE.PointsMaterial({\ncolor: 0xFFD700,\nsize: 0.1,\ntransparent: true,\nopacity: 0.8\n});",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 452,
          "code": "particleGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\nconst particleMaterial = new THREE.PointsMaterial({\ncolor: 0xFFD700,\nsize: 0.1,\ntransparent: true,\nopacity: 0.8\n});",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 262,
          "code": "particleGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\nconst particleMaterial = new THREE.PointsMaterial({\ncolor: 0xFFD700,\nsize: 0.1,\ntransparent: true,\nopacity: 0.8\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -2046409589,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 584,
          "code": "const energyMultiplier = aiState.energy / 100;\nmascot.children.forEach((child: THREE.Object3D) => {\nif (child.userData.isAnimated) {\nchild.rotation.y = time * 0.001 * energyMultiplier;\n}\n});",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 504,
          "code": "const energyMultiplier = aiState.energy / 100;\nmascot.children.forEach((child: THREE.Object3D) => {\nif (child.userData.isAnimated) {\nchild.rotation.y = time * 0.001 * energyMultiplier;\n}\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1563561574,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 592,
          "code": "if (Math.random() < 0.01) { // Occasional eye movement\nsetEyeTracking({\nx: (Math.random() - 0.5) * 2,\ny: (Math.random() - 0.5) * 2\n});\n}\n}, [aiState]);",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 512,
          "code": "if (Math.random() < 0.01) { // Occasional eye movement\nsetEyeTracking({\nx: (Math.random() - 0.5) * 2,\ny: (Math.random() - 0.5) * 2\n});\n}\n}, [aiState]);",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 322,
          "code": "if (Math.random() < 0.01) { // Occasional eye movement\nsetEyeTracking({\nx: (Math.random() - 0.5) * 2,\ny: (Math.random() - 0.5) * 2\n});\n}\n}, [aiState]);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -420918630,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 640,
          "code": "const renderer = new THREE.WebGLRenderer({\nantialias: true,\nalpha: true,\npowerPreference: \"high-performance\"\n});\nrenderer.setSize(200, 200);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\nrendererRef.current = renderer;",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 560,
          "code": "const renderer = new THREE.WebGLRenderer({\nantialias: true,\nalpha: true,\npowerPreference: \"high-performance\"\n});\nrenderer.setSize(200, 200);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\nrendererRef.current = renderer;",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 370,
          "code": "const renderer = new THREE.WebGLRenderer({\nantialias: true,\nalpha: true,\npowerPreference: \"high-performance\"\n});\nrenderer.setSize(200, 200);\nrenderer.shadowMap.enabled = true;\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap;\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\nrendererRef.current = renderer;",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1474737069,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 655,
          "code": "const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\ndirectionalLight.position.set(5, 10, 5);\ndirectionalLight.castShadow = true;\ndirectionalLight.shadow.mapSize.width = 2048;\ndirectionalLight.shadow.mapSize.height = 2048;\nscene.add(directionalLight);",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 575,
          "code": "const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\ndirectionalLight.position.set(5, 10, 5);\ndirectionalLight.castShadow = true;\ndirectionalLight.shadow.mapSize.width = 2048;\ndirectionalLight.shadow.mapSize.height = 2048;\nscene.add(directionalLight);",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 385,
          "code": "const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\ndirectionalLight.position.set(5, 10, 5);\ndirectionalLight.castShadow = true;\ndirectionalLight.shadow.mapSize.width = 2048;\ndirectionalLight.shadow.mapSize.height = 2048;\nscene.add(directionalLight);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1499713513,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 683,
          "code": "return () => {\nif (animationRef.current) {\ncancelAnimationFrame(animationRef.current);\n}\nif (mountRef.current && renderer.domElement) {\nmountRef.current.removeChild(renderer.domElement);\n}\nrenderer.dispose();\n};\n}, [create3DMascot, updateMascotAnimation]);",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 413,
          "code": "return () => {\nif (animationRef.current) {\ncancelAnimationFrame(animationRef.current);\n}\nif (mountRef.current && renderer.domElement) {\nmountRef.current.removeChild(renderer.domElement);\n}\nrenderer.dispose();\n};\n}, [create3DMascot, updateMascotAnimation]);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1614614632,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 701,
          "code": "return (\n<div className=\"relative\">\n{/* 3D Mascot Container */}\n<div\nref={mountRef}\nclassName=\"w-50 h-50 rounded-full cursor-pointer hover:scale-105 transition-transform duration-300\"\nonClick={() => handleIntelligentInteraction('click')}\n/>",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 621,
          "code": "return (\n<div className=\"relative\">\n{/* 3D Mascot Container */}\n<div\nref={mountRef}\nclassName=\"w-50 h-50 rounded-full cursor-pointer hover:scale-105 transition-transform duration-300\"\nonClick={() => handleIntelligentInteraction('click')}\n/>",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 431,
          "code": "return (\n<div className=\"relative\">\n{/* 3D Mascot Container */}\n<div\nref={mountRef}\nclassName=\"w-50 h-50 rounded-full cursor-pointer hover:scale-105 transition-transform duration-300\"\nonClick={() => handleIntelligentInteraction('click')}\n/>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -449665825,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 710,
          "code": "{/* AI Status Display */}\n<div className=\"absolute -top-2 -right-2 space-y-1\">\n{/* Mood Indicator */}\n<div className={`w-4 h-4 rounded-full ${\naiState.mood === 'excited' ? 'bg-yellow-400 animate-pulse' :\naiState.mood === 'happy' ? 'bg-green-400' :\naiState.mood === 'encouraging' ? 'bg-blue-400' :\naiState.mood === 'focused' ? 'bg-purple-400' :\naiState.mood === 'tired' ? 'bg-gray-400' :\n'bg-pink-400'\n}`} />",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 630,
          "code": "{/* AI Status Display */}\n<div className=\"absolute -top-2 -right-2 space-y-1\">\n{/* Mood Indicator */}\n<div className={`w-4 h-4 rounded-full ${\naiState.mood === 'excited' ? 'bg-yellow-400 animate-pulse' :\naiState.mood === 'happy' ? 'bg-green-400' :\naiState.mood === 'encouraging' ? 'bg-blue-400' :\naiState.mood === 'focused' ? 'bg-purple-400' :\naiState.mood === 'tired' ? 'bg-gray-400' :\n'bg-pink-400'\n}`} />",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 440,
          "code": "{/* AI Status Display */}\n<div className=\"absolute -top-2 -right-2 space-y-1\">\n{/* Mood Indicator */}\n<div className={`w-4 h-4 rounded-full ${\naiState.mood === 'excited' ? 'bg-yellow-400 animate-pulse' :\naiState.mood === 'happy' ? 'bg-green-400' :\naiState.mood === 'encouraging' ? 'bg-blue-400' :\naiState.mood === 'focused' ? 'bg-purple-400' :\naiState.mood === 'tired' ? 'bg-gray-400' :\n'bg-pink-400'\n}`} />",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1356195433,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 722,
          "code": "{/* Energy Level */}\n<div className=\"w-4 h-8 bg-gray-200 rounded-full overflow-hidden\">\n<div\nclassName=\"bg-gradient-to-t from-red-400 to-green-400 rounded-full transition-all duration-1000\"\nstyle={{ height: `${aiState.energy}%` }}\n/>\n</div>\n</div>",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 642,
          "code": "{/* Energy Level */}\n<div className=\"w-4 h-8 bg-gray-200 rounded-full overflow-hidden\">\n<div\nclassName=\"bg-gradient-to-t from-red-400 to-green-400 rounded-full transition-all duration-1000\"\nstyle={{ height: `${aiState.energy}%` }}\n/>\n</div>\n</div>",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 452,
          "code": "{/* Energy Level */}\n<div className=\"w-4 h-8 bg-gray-200 rounded-full overflow-hidden\">\n<div\nclassName=\"bg-gradient-to-t from-red-400 to-green-400 rounded-full transition-all duration-1000\"\nstyle={{ height: `${aiState.energy}%` }}\n/>\n</div>\n</div>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 166066381,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 731,
          "code": "{/* Intelligent Dialogue */}\n<AnimatePresence>\n{currentDialogue && (\n<motion.div\nclassName=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-4 max-w-xs\"\ninitial={{ opacity: 0, scale: 0.8, y: 20 }}\nanimate={{ opacity: 1, scale: 1, y: 0 }}\nexit={{ opacity: 0, scale: 0.8, y: 20 }}\n>\n<div className=\"bg-gradient-to-br from-purple-600 to-blue-600 text-white p-4 rounded-2xl shadow-xl\">\n<p className=\"text-sm font-medium\">{currentDialogue}</p>\n<div className=\"absolute top-full left-1/2 transform -translate-x-1/2\">\n<div className=\"w-0 h-0 border-l-4 border-r-4 border-t-8 border-transparent border-t-purple-600\" />\n</div>\n</div>\n</motion.div>\n)}\n</AnimatePresence>",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 651,
          "code": "{/* French Dialogue */}\n<AnimatePresence>\n{currentDialogue && (\n<motion.div\nclassName=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-4 max-w-xs\"\ninitial={{ opacity: 0, scale: 0.8, y: 20 }}\nanimate={{ opacity: 1, scale: 1, y: 0 }}\nexit={{ opacity: 0, scale: 0.8, y: 20 }}\n>\n<div className=\"bg-gradient-to-br from-purple-600 to-blue-600 text-white p-4 rounded-2xl shadow-xl\">\n<p className=\"text-sm font-medium\">{currentDialogue}</p>\n<div className=\"absolute top-full left-1/2 transform -translate-x-1/2\">\n<div className=\"w-0 h-0 border-l-4 border-r-4 border-t-8 border-transparent border-t-purple-600\" />\n</div>\n</div>\n</motion.div>\n)}\n</AnimatePresence>",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 461,
          "code": "{/* Intelligent Dialogue */}\n<AnimatePresence>\n{currentDialogue && (\n<motion.div\nclassName=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-4 max-w-xs\"\ninitial={{ opacity: 0, scale: 0.8, y: 20 }}\nanimate={{ opacity: 1, scale: 1, y: 0 }}\nexit={{ opacity: 0, scale: 0.8, y: 20 }}\n>\n<div className=\"bg-gradient-to-br from-purple-600 to-blue-600 text-white p-4 rounded-2xl shadow-xl\">\n<p className=\"text-sm font-medium\">{currentDialogue}</p>\n<div className=\"absolute top-full left-1/2 transform -translate-x-1/2\">\n<div className=\"w-0 h-0 border-l-4 border-r-4 border-t-8 border-transparent border-t-purple-600\" />\n</div>\n</div>\n</motion.div>\n)}\n</AnimatePresence>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1834466135,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 750,
          "code": "{/* Thinking Indicator */}\n<AnimatePresence>\n{isThinking && (\n<motion.div\nclassName=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\ninitial={{ opacity: 0 }}\nanimate={{ opacity: 1 }}\nexit={{ opacity: 0 }}\n>\n<div className=\"flex space-x-1\">\n{[...Array(3)].map((_, i) => (\n<motion.div\nkey={i}\nclassName=\"w-2 h-2 bg-purple-400 rounded-full\"\nanimate={{\nscale: [1, 1.2, 1],\nopacity: [0.5, 1, 0.5]\n}}\ntransition={{\nduration: 0.6,\nrepeat: Infinity,\ndelay: i * 0.2\n}}\n/>\n))}\n</div>\n</motion.div>\n)}\n</AnimatePresence>",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 480,
          "code": "{/* Thinking Indicator */}\n<AnimatePresence>\n{isThinking && (\n<motion.div\nclassName=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\ninitial={{ opacity: 0 }}\nanimate={{ opacity: 1 }}\nexit={{ opacity: 0 }}\n>\n<div className=\"flex space-x-1\">\n{[...Array(3)].map((_, i) => (\n<motion.div\nkey={i}\nclassName=\"w-2 h-2 bg-purple-400 rounded-full\"\nanimate={{\nscale: [1, 1.2, 1],\nopacity: [0.5, 1, 0.5]\n}}\ntransition={{\nduration: 0.6,\nrepeat: Infinity,\ndelay: i * 0.2\n}}\n/>\n))}\n</div>\n</motion.div>\n)}\n</AnimatePresence>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1209617301,
      "occurrences": [
        {
          "file": "components\\AdvancedMascotSystem.tsx",
          "line": 780,
          "code": "{/* Relationship Hearts */}\n{aiState.relationship > 80 && (\n<div className=\"absolute -top-6 left-1/2 transform -translate-x-1/2\">\n<motion.div\nanimate={{ y: [-5, -15, -5] }}\ntransition={{ duration: 2, repeat: Infinity }}\nclassName=\"text-red-400 text-lg\"\n>\n💕\n</motion.div>\n</div>\n)}\n</div>\n);\n};",
          "type": "block"
        },
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 700,
          "code": "{/* Relationship Hearts */}\n{aiState.relationship > 80 && (\n<div className=\"absolute -top-6 left-1/2 transform -translate-x-1/2\">\n<motion.div\nanimate={{ y: [-5, -15, -5] }}\ntransition={{ duration: 2, repeat: Infinity }}\nclassName=\"text-red-400 text-lg\"\n>\n💕\n</motion.div>\n</div>\n)}\n</div>\n);\n};",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 510,
          "code": "{/* Relationship Hearts */}\n{aiState.relationship > 80 && (\n<div className=\"absolute -top-6 left-1/2 transform -translate-x-1/2\">\n<motion.div\nanimate={{ y: [-5, -15, -5] }}\ntransition={{ duration: 2, repeat: Infinity }}\nclassName=\"text-red-400 text-lg\"\n>\n💕\n</motion.div>\n</div>\n)}\n</div>\n);\n};",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1959464261,
      "occurrences": [
        {
          "file": "components\\AdvancedParticleEngine.tsx",
          "line": 501,
          "code": "if (particlesRef.current.length < config.maxParticles) {\nfor (let i = 0; i < config.spawnRate; i++) {\nconst x = emitterPosition.x + (Math.random() - 0.5) * 20;\nconst y = emitterPosition.y + (Math.random() - 0.5) * 20;\nparticlesRef.current.push(createParticle(x, y));\n}\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedParticleEngine.tsx",
          "line": 239,
          "code": "if (particlesRef.current.length < config.maxParticles) {\nfor (let i = 0; i < config.spawnRate; i++) {\nconst x = emitterPosition.x + (Math.random() - 0.5) * 20;\nconst y = emitterPosition.y + (Math.random() - 0.5) * 20;\nparticlesRef.current.push(createParticle(x, y));\n}\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 831915387,
      "occurrences": [
        {
          "file": "components\\AdvancedParticleEngine.tsx",
          "line": 510,
          "code": "particlesRef.current = particlesRef.current.filter(particle => {\nupdateParticlePhysics(particle, deltaTime);\nreturn particle.life < particle.maxLife &&\nparticle.x > -50 && particle.x < width + 50 &&\nparticle.y > -50 && particle.y < height + 50;\n});",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedParticleEngine.tsx",
          "line": 248,
          "code": "particlesRef.current = particlesRef.current.filter(particle => {\nupdateParticlePhysics(particle, deltaTime);\nreturn particle.life < particle.maxLife &&\nparticle.x > -50 && particle.x < width + 50 &&\nparticle.y > -50 && particle.y < height + 50;\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 157739367,
      "occurrences": [
        {
          "file": "components\\AdvancedParticleEngine.tsx",
          "line": 536,
          "code": "useEffect(() => {\nif (isActive) {\nlastTimeRef.current = performance.now();\nanimationFrameRef.current = requestAnimationFrame(animate);\n} else {\nif (animationFrameRef.current) {\ncancelAnimationFrame(animationFrameRef.current);\n}\nparticlesRef.current = [];\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedParticleEngine.tsx",
          "line": 263,
          "code": "useEffect(() => {\nif (isActive) {\nlastTimeRef.current = performance.now();\nanimationFrameRef.current = requestAnimationFrame(animate);\n} else {\nif (animationFrameRef.current) {\ncancelAnimationFrame(animationFrameRef.current);\n}\nparticlesRef.current = [];\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 165320436,
      "occurrences": [
        {
          "file": "components\\AdvancedParticleEngine.tsx",
          "line": 547,
          "code": "return () => {\nif (animationFrameRef.current) {\ncancelAnimationFrame(animationFrameRef.current);\n}\n};\n}, [isActive, animate]);",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedParticleEngine.tsx",
          "line": 274,
          "code": "return () => {\nif (animationFrameRef.current) {\ncancelAnimationFrame(animationFrameRef.current);\n}\n};\n}, [isActive, animate]);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1333718285,
      "occurrences": [
        {
          "file": "components\\CP2025Demo.tsx",
          "line": 297,
          "code": "{/* Modules */}\n<div className=\"mb-8\">\n<h2 className=\"text-2xl font-semibold mb-4\">Modules CP2025</h2>\n<div className=\"grid gap-4\">\n{modules.map((module) => (\n<div key={module.id} className=\"bg-white p-4 rounded-lg shadow border\">\n<div className=\"flex justify-between items-start mb-2\">\n<h3 className=\"text-lg font-medium text-gray-900\">{module.titre}</h3>\n<span className=\"px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded\">\n{module.niveau} - {module.matiere}\n</span>\n</div>\n<p className=\"text-gray-600 mb-2\">{module.description}</p>\n<div className=\"flex gap-2 text-sm text-gray-500\">\n<span>Période: {module.periode}</span>\n<span>•</span>\n<span>Ordre: {module.ordre}</span>\n<span>•</span>\n<span>Exercices: {cp2025Data.getExercisesByModuleId(module.id).length}</span>\n</div>\n</div>\n))}\n</div>\n</div>",
          "type": "block"
        },
        {
          "file": "components\\CP2025ExtendedDemo.tsx",
          "line": 261,
          "code": "{/* Modules Overview */}\n<div className=\"mb-8\">\n<h2 className=\"text-2xl font-semibold mb-4\">Modules CP2025</h2>\n<div className=\"grid gap-4\">\n{modules.map((module) => (\n<div key={module.id} className=\"bg-white p-4 rounded-lg shadow border\">\n<div className=\"flex justify-between items-start mb-2\">\n<h3 className=\"text-lg font-medium text-gray-900\">{module.titre}</h3>\n<span className=\"px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded\">\n{module.niveau} - {module.matiere}\n</span>\n</div>\n<p className=\"text-gray-600 mb-2\">{module.description}</p>\n<div className=\"flex gap-2 text-sm text-gray-500\">\n<span>Période: {module.periode}</span>\n<span>•</span>\n<span>Ordre: {module.ordre}</span>\n<span>•</span>\n<span>Exercices: {cp2025Data.getExercisesByModuleId(module.id).length}</span>\n</div>\n</div>\n))}\n</div>\n</div>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1747829728,
      "occurrences": [
        {
          "file": "components\\CP2025Demo.tsx",
          "line": 365,
          "code": "{/* Exercise Types Overview */}\n<div className=\"mb-8\">\n<h2 className=\"text-2xl font-semibold mb-4\">Types d'Exercices</h2>\n<div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n{statistics && Object.entries(statistics.exercisesByType).map(([type, count]) => (\ncount > 0 && (\n<div key={type} className=\"bg-white p-4 rounded-lg shadow border text-center\">\n<div className=\"text-2xl font-bold text-blue-600\">{count}</div>\n<div className=\"text-sm text-gray-600\">{type}</div>\n</div>\n)\n))}\n</div>\n</div>",
          "type": "block"
        },
        {
          "file": "components\\CP2025ExtendedDemo.tsx",
          "line": 371,
          "code": "{/* Exercise Types Overview */}\n<div className=\"mb-8\">\n<h2 className=\"text-2xl font-semibold mb-4\">Types d'Exercices</h2>\n<div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n{statistics && Object.entries(statistics.exercisesByType).map(([type, count]) => (\ncount > 0 && (\n<div key={type} className=\"bg-white p-4 rounded-lg shadow border text-center\">\n<div className=\"text-2xl font-bold text-blue-600\">{count}</div>\n<div className=\"text-sm text-gray-600\">{type}</div>\n</div>\n)\n))}\n</div>\n</div>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1169926565,
      "occurrences": [
        {
          "file": "components\\CrossBrowserMascot3D.tsx",
          "line": 478,
          "code": "scene.traverse((object) => {\nif (object instanceof THREE.Mesh) {\nobject.geometry.dispose();\nif (Array.isArray(object.material)) {\nobject.material.forEach(material => material.dispose());\n} else {\nobject.material.dispose();\n}\n}\n});",
          "type": "block"
        },
        {
          "file": "components\\MobileOptimizedRenderer.tsx",
          "line": 453,
          "code": "scene.traverse((object) => {\nif (object instanceof THREE.Mesh) {\nobject.geometry.dispose();\nif (Array.isArray(object.material)) {\nobject.material.forEach(material => material.dispose());\n} else {\nobject.material.dispose();\n}\n}\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -282844919,
      "occurrences": [
        {
          "file": "components\\dashboard\\AchievementBadges.tsx",
          "line": 4,
          "code": "interface Achievement {\nid: number;\nachievementCode: string;\ntitle: string;\ndescription: string;\ncategory: string;\ndifficulty: string;\nxpReward: number;\nbadgeIconUrl: string;\ncurrentProgress: number;\nmaxProgress: number;\nprogressPercentage: number;\nisCompleted: boolean;\ncompletedAt?: string;\ndisplayOrder: number;\n}",
          "type": "block"
        },
        {
          "file": "pages\\Dashboard.tsx",
          "line": 43,
          "code": "interface Achievement {\nid: number;\nachievementCode: string;\ntitle: string;\ndescription: string;\ncategory: string;\ndifficulty: string;\nxpReward: number;\nbadgeIconUrl: string;\ncurrentProgress: number;\nmaxProgress: number;\nprogressPercentage: number;\nisCompleted: boolean;\ncompletedAt?: string;\ndisplayOrder: number;\n}",
          "type": "block"
        },
        {
          "file": "services\\enhanced-api.service.ts",
          "line": 25,
          "code": "interface Achievement {\nid: number;\nachievementCode: string;\ntitle: string;\ndescription: string;\ncategory: string;\ndifficulty: string;\nxpReward: number;\nbadgeIconUrl: string;\ncurrentProgress: number;\nmaxProgress: number;\nprogressPercentage: number;\nisCompleted: boolean;\ncompletedAt?: string;\ndisplayOrder: number;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1597797054,
      "occurrences": [
        {
          "file": "components\\dashboard\\EducationalDashboard.tsx",
          "line": 8,
          "code": "const COMPETENCY_MAPPING: CompetencyMapping = {\n'wizard_hat_epic': {\ndescription: 'Chapeau de Magicien',\ngameMetric: 'Objet débloqué par 10 exercices de maths',\neducationalValue: 'Maîtrise des opérations de base (addition/soustraction)',\nparentExplanation: 'Votre enfant a démontré une compréhension solide des calculs fondamentaux'\n},\n'crown_legendary': {\ndescription: 'Couronne de la Sagesse',\ngameMetric: 'Série de 30 bonnes réponses',\neducationalValue: 'Excellence en résolution de problèmes et concentration',\nparentExplanation: 'Votre enfant fait preuve d\\'une concentration exceptionnelle et d\\'une maîtrise avancée'\n},\n'monocle_detective': {\ndescription: 'Monocle de Détective',\ngameMetric: 'Résolution de mots mystères difficiles',\neducationalValue: 'Développement du vocabulaire et logique déductive',\nparentExplanation: 'Votre enfant enrichit son vocabulaire et développe sa capacité de déduction'\n},\n'smart_glasses_nerd': {\ndescription: 'Lunettes de Génie',\ngameMetric: 'Score parfait sur exercices difficiles',\neducationalValue: 'Maîtrise de concepts avancés et pensée critique',\nparentExplanation: 'Votre enfant est prêt pour des défis plus complexes'\n}\n};",
          "type": "block"
        },
        {
          "file": "hooks\\useEducationalDashboard.ts",
          "line": 7,
          "code": "const COMPETENCY_MAPPING: CompetencyMapping = {\n'wizard_hat_epic': {\ndescription: 'Chapeau de Magicien',\ngameMetric: 'Objet débloqué par 10 exercices de maths',\neducationalValue: 'Maîtrise des opérations de base (addition/soustraction)',\nparentExplanation: 'Votre enfant a démontré une compréhension solide des calculs fondamentaux'\n},\n'crown_legendary': {\ndescription: 'Couronne de la Sagesse',\ngameMetric: 'Série de 30 bonnes réponses',\neducationalValue: 'Excellence en résolution de problèmes et concentration',\nparentExplanation: 'Votre enfant fait preuve d\\'une concentration exceptionnelle et d\\'une maîtrise avancée'\n},\n'monocle_detective': {\ndescription: 'Monocle de Détective',\ngameMetric: 'Résolution de mots mystères difficiles',\neducationalValue: 'Développement du vocabulaire et logique déductive',\nparentExplanation: 'Votre enfant enrichit son vocabulaire et développe sa capacité de déduction'\n},\n'smart_glasses_nerd': {\ndescription: 'Lunettes de Génie',\ngameMetric: 'Score parfait sur exercices difficiles',\neducationalValue: 'Maîtrise de concepts avancés et pensée critique',\nparentExplanation: 'Votre enfant est prêt pour des défis plus complexes'\n}\n};",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 2031716225,
      "occurrences": [
        {
          "file": "components\\dashboard\\EducationalDashboard.tsx",
          "line": 241,
          "code": "return {\nid: 'student_001', // This would come from your auth system\nname: 'Emma Martin', // This would come from your user data\nage: 9,\nstreakCurrent: wahooContext.streak,\ntotalExercises: wahooContext.totalCorrect,\nmascotHappiness,\nunlockedItems,\nmysteryWordsCompleted: 8, // This would come from your mystery word service\nwahooIntensityHistory: [wahooContext.lastWahooIntensity],\neducationalInsights\n};\n};",
          "type": "block"
        },
        {
          "file": "hooks\\useEducationalDashboard.ts",
          "line": 74,
          "code": "return {\nid: 'student_001', // This would come from your auth system\nname: 'Emma Martin', // This would come from your user data\nage: 9,\nstreakCurrent: wahooData.streak,\ntotalExercises: wahooData.totalCorrect,\nmascotHappiness: calculateMascotHappiness(mascotData, wahooData),\nunlockedItems: mascotData.unlockedItems,\nmysteryWordsCompleted: wahooData.mysteryWordsCompleted,\nwahooIntensityHistory: wahooData.intensityHistory,\neducationalInsights\n};\n}, [wahooData, mascotData, generateEducationalInsights]);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1422878525,
      "occurrences": [
        {
          "file": "components\\dashboard\\MasteryLevelsCard.tsx",
          "line": 4,
          "code": "interface CompetenceProgress {\nid: number;\ncompetenceCode: string;\nniveau: string;\nmatiere: string;\ndomaine: string;\nmasteryLevel: string;\nprogressPercent: number;\ntotalAttempts: number;\nsuccessfulAttempts: number;\naverageScore: number;\ntotalTimeSpent: number;\nconsecutiveSuccesses: number;\nlastAttemptAt: string;\nmasteredAt?: string;\n}",
          "type": "block"
        },
        {
          "file": "pages\\Dashboard.tsx",
          "line": 26,
          "code": "interface CompetenceProgress {\nid: number;\ncompetenceCode: string;\nniveau: string;\nmatiere: string;\ndomaine: string;\nmasteryLevel: string;\nprogressPercent: number;\ntotalAttempts: number;\nsuccessfulAttempts: number;\naverageScore: number;\ntotalTimeSpent: number;\nconsecutiveSuccesses: number;\nlastAttemptAt: string;\nmasteredAt?: string;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -101394274,
      "occurrences": [
        {
          "file": "components\\exercise\\ExerciseDragDrop.tsx",
          "line": 5,
          "code": "export interface ExerciseDragDropProps {\nexercise: ExercicePedagogique;\nonAnswerChange: (answer: any) => void;\ndisabled: boolean;\ncurrentAnswer: any;\nshowValidation: boolean;\n}",
          "type": "block"
        },
        {
          "file": "components\\exercise\\types\\ExerciseDragDrop.tsx",
          "line": 6,
          "code": "export interface ExerciseDragDropProps {\nexercise: ExercicePedagogique;\nonAnswerChange: (answer: any) => void;\ndisabled: boolean;\ncurrentAnswer: any;\nshowValidation: boolean;\n}",
          "type": "block"
        },
        {
          "file": "types\\api.types.ts",
          "line": 55,
          "code": "export interface ExerciseDragDropProps {\nexercise: ExercicePedagogique;\nonAnswerChange: (answer: any) => void;\ndisabled: boolean;\ncurrentAnswer: any;\nshowValidation: boolean;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -522127035,
      "occurrences": [
        {
          "file": "components\\exercise\\ExerciseDragDrop.tsx",
          "line": 63,
          "code": "const answer = updatedZones.reduce((acc, zone) => {\nif (zone.currentItem) {\nacc[zone.id] = zone.currentItem.id;\n}\nreturn acc;\n}, {} as Record<string, string>);",
          "type": "block"
        },
        {
          "file": "components\\exercise\\ExerciseDragDrop.tsx",
          "line": 84,
          "code": "const answer = updatedZones.reduce((acc, zone) => {\nif (zone.currentItem) {\nacc[zone.id] = zone.currentItem.id;\n}\nreturn acc;\n}, {} as Record<string, string>);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 264939916,
      "occurrences": [
        {
          "file": "components\\games\\EnhancedMathGame.tsx",
          "line": 118,
          "code": "<div className=\"relative z-10 flex items-center justify-center min-h-screen\">\n<AnimatedCard variant=\"sparkle\" className=\"max-w-2xl mx-auto text-center\">\n<motion.div\ninitial={{ scale: 0 }}\nanimate={{ scale: 1 }}\ntransition={{ type: \"spring\", stiffness: 200, damping: 10 }}\nclassName=\"mb-6\"\n>\n<span className=\"text-8xl\">🔢</span>\n</motion.div>",
          "type": "block"
        },
        {
          "file": "components\\games\\MathGameWrapper.tsx",
          "line": 67,
          "code": "<div className=\"relative z-10 flex items-center justify-center min-h-screen\">\n<AnimatedCard variant=\"sparkle\" className=\"max-w-2xl mx-auto text-center\">\n<motion.div\ninitial={{ scale: 0 }}\nanimate={{ scale: 1 }}\ntransition={{ type: \"spring\", stiffness: 200, damping: 10 }}\nclassName=\"mb-6\"\n>\n<span className=\"text-8xl\">🔢</span>\n</motion.div>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1253501423,
      "occurrences": [
        {
          "file": "components\\games\\EnhancedMathGame.tsx",
          "line": 129,
          "code": "<motion.h1\ninitial={{ opacity: 0, y: 20 }}\nanimate={{ opacity: 1, y: 0 }}\ntransition={{ delay: 0.5 }}\nclassName=\"text-4xl font-bold text-gray-800 mb-4\"\n>\nLe Royaume des Nombres Magiques\n</motion.h1>",
          "type": "block"
        },
        {
          "file": "components\\games\\MathGameWrapper.tsx",
          "line": 78,
          "code": "<motion.h1\ninitial={{ opacity: 0, y: 20 }}\nanimate={{ opacity: 1, y: 0 }}\ntransition={{ delay: 0.5 }}\nclassName=\"text-4xl font-bold text-gray-800 mb-4\"\n>\nLe Royaume des Nombres Magiques\n</motion.h1>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 155454505,
      "occurrences": [
        {
          "file": "components\\games\\EnhancedMathGame.tsx",
          "line": 159,
          "code": "<div className=\"relative z-10 flex items-center justify-center min-h-screen\">\n<AnimatedCard variant=\"reward\" className=\"max-w-2xl mx-auto text-center\">\n<motion.div\ninitial={{ scale: 0 }}\nanimate={{ scale: 1 }}\ntransition={{ type: \"spring\", stiffness: 200, damping: 10 }}\nclassName=\"mb-6\"\n>\n<span className=\"text-8xl\">🎉</span>\n</motion.div>",
          "type": "block"
        },
        {
          "file": "components\\games\\MathGameWrapper.tsx",
          "line": 128,
          "code": "<div className=\"relative z-10 flex items-center justify-center min-h-screen\">\n<AnimatedCard variant=\"reward\" className=\"max-w-2xl mx-auto text-center\">\n<motion.div\ninitial={{ scale: 0 }}\nanimate={{ scale: 1 }}\ntransition={{ type: \"spring\", stiffness: 200, damping: 10 }}\nclassName=\"mb-6\"\n>\n<span className=\"text-8xl\">🎉</span>\n</motion.div>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -167548434,
      "occurrences": [
        {
          "file": "components\\games\\EnhancedMathGame.tsx",
          "line": 170,
          "code": "<motion.h2\ninitial={{ opacity: 0, y: 20 }}\nanimate={{ opacity: 1, y: 0 }}\ntransition={{ delay: 0.3 }}\nclassName=\"text-3xl font-bold text-gray-800 mb-4\"\n>\nFélicitations !\n</motion.h2>",
          "type": "block"
        },
        {
          "file": "components\\games\\MathGameWrapper.tsx",
          "line": 139,
          "code": "<motion.h2\ninitial={{ opacity: 0, y: 20 }}\nanimate={{ opacity: 1, y: 0 }}\ntransition={{ delay: 0.3 }}\nclassName=\"text-3xl font-bold text-gray-800 mb-4\"\n>\nFélicitations !\n</motion.h2>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1386674789,
      "occurrences": [
        {
          "file": "components\\handwriting\\PlumeEnchanteeCP2025.tsx",
          "line": 352,
          "code": "e.preventDefault();\nconst rect = canvasRef.current!.getBoundingClientRect();\nconst pos = {\nx: e.clientX - rect.left,\ny: e.clientY - rect.top,\ntimestamp: Date.now(),\npressure: e.pressure\n};",
          "type": "block"
        },
        {
          "file": "components\\handwriting\\PlumeEnchanteeCP2025.tsx",
          "line": 379,
          "code": "e.preventDefault();\nconst rect = canvasRef.current!.getBoundingClientRect();\nconst pos = {\nx: e.clientX - rect.left,\ny: e.clientY - rect.top,\ntimestamp: Date.now(),\npressure: e.pressure\n};",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -366467794,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 83,
          "code": "const mascotConfig = useMemo(() => ({\ndragon: {\nprimaryColor: 0x8A2BE2, // Magical violet\nsecondaryColor: 0x4F46E5, // Magical blue\neyes: 0xFFD700,\npersonality: 'fierce'\n},\nfairy: {\nprimaryColor: 0xEC4899, // Magical pink\nsecondaryColor: 0x10B981, // Magical green\neyes: 0x87CEEB,\npersonality: 'gentle'\n},\nrobot: {\nprimaryColor: 0x6B7280, // Gray\nsecondaryColor: 0x3B82F6, // Blue\neyes: 0x00FFFF,\npersonality: 'logical'\n},\ncat: {\nprimaryColor: 0xF59E0B, // Orange\nsecondaryColor: 0xFFFBEB, // Light cream\neyes: 0x22C55E,\npersonality: 'playful'\n},\nowl: {\nprimaryColor: 0x8B4513, // Brown\nsecondaryColor: 0xDEB887, // Light brown\neyes: 0xFFD700,\npersonality: 'wise'\n}\n}), []);",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 40,
          "code": "const mascotConfig = useMemo(() => ({\ndragon: {\nprimaryColor: 0x8A2BE2, // Magical violet\nsecondaryColor: 0x4F46E5, // Magical blue\neyes: 0xFFD700,\npersonality: 'fierce'\n},\nfairy: {\nprimaryColor: 0xEC4899, // Magical pink\nsecondaryColor: 0x10B981, // Magical green\neyes: 0x87CEEB,\npersonality: 'gentle'\n},\nrobot: {\nprimaryColor: 0x6B7280, // Gray\nsecondaryColor: 0x3B82F6, // Blue\neyes: 0x00FFFF,\npersonality: 'logical'\n},\ncat: {\nprimaryColor: 0xF59E0B, // Orange\nsecondaryColor: 0xFFFBEB, // Light cream\neyes: 0x22C55E,\npersonality: 'playful'\n},\nowl: {\nprimaryColor: 0x8B4513, // Brown\nsecondaryColor: 0xDEB887, // Light brown\neyes: 0xFFD700,\npersonality: 'wise'\n}\n}), []);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -943579871,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 123,
          "code": "switch (studentData.timeOfDay) {\ncase 'morning':\nenergyChange = 5;\nbreak;\ncase 'evening':\nenergyChange = -10;\nbreak;\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 88,
          "code": "switch (studentData.timeOfDay) {\ncase 'morning':\nenergyChange = 5;\nbreak;\ncase 'evening':\nenergyChange = -10;\nbreak;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1717689922,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 133,
          "code": "switch (studentData.recentPerformance) {\ncase 'excellent':\nnewMood = 'proud';\nrelationshipChange = 5;\nenergyChange += 10;\nbreak;\ncase 'struggling':\nnewMood = aiState.personality.patience > 0.5 ? 'encouraging' : 'focused';\nrelationshipChange = 2; // Still caring\nbreak;\ncase 'average':\nnewMood = 'curious';\nrelationshipChange = 1;\nbreak;\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 98,
          "code": "switch (studentData.recentPerformance) {\ncase 'excellent':\nnewMood = 'proud';\nrelationshipChange = 5;\nenergyChange += 10;\nbreak;\ncase 'struggling':\nnewMood = aiState.personality.patience > 0.5 ? 'encouraging' : 'focused';\nrelationshipChange = 2; // Still caring\nbreak;\ncase 'average':\nnewMood = 'curious';\nrelationshipChange = 1;\nbreak;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -992954073,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 150,
          "code": "switch (currentActivity) {\ncase 'achievement':\nnewMood = 'excited';\nenergyChange += 15;\nbreak;\ncase 'mistake':\nnewMood = 'encouraging';\nbreak;\ncase 'exercise':\nnewMood = 'focused';\nenergyChange -= 5;\nbreak;\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 115,
          "code": "switch (currentActivity) {\ncase 'achievement':\nnewMood = 'excited';\nenergyChange += 15;\nbreak;\ncase 'mistake':\nnewMood = 'encouraging';\nbreak;\ncase 'exercise':\nnewMood = 'focused';\nenergyChange -= 5;\nbreak;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -2019128881,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 165,
          "code": "setAiState(prev => ({\n...prev,\nmood: newMood,\nenergy: Math.max(0, Math.min(100, prev.energy + energyChange)),\nrelationship: Math.max(0, Math.min(100, prev.relationship + relationshipChange)),\nmemory: {\n...prev.memory,\nlastInteraction: new Date(),\nstudentProgress: studentData.level\n}\n}));\n}, [aiState, studentData, currentActivity]);",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 130,
          "code": "setAiState(prev => ({\n...prev,\nmood: newMood,\nenergy: Math.max(0, Math.min(100, prev.energy + energyChange)),\nrelationship: Math.max(0, Math.min(100, prev.relationship + relationshipChange)),\nmemory: {\n...prev.memory,\nlastInteraction: new Date(),\nstudentProgress: studentData.level\n}\n}));\n}, [aiState, studentData, currentActivity]);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1119255487,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 252,
          "code": "const headGeometry = new THREE.SphereGeometry(headSize, 32, 32);\nconst headMaterial = new THREE.MeshPhongMaterial({\ncolor: new THREE.Color().setHSL(\n(aiState.relationship / 100) * 0.3, // Hue changes with relationship\n0.8,\n0.6 + (aiState.energy / 200)\n),\nshininess: 100,\ntransparent: true,\nopacity: 0.9 + (aiState.attention / 1000)\n});\nconst head = new THREE.Mesh(headGeometry, headMaterial);\nhead.position.set(0, 1.5, 0);\nhead.castShadow = true;\ngroup.add(head);",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 207,
          "code": "const headGeometry = new THREE.SphereGeometry(headSize, 32, 32);\nconst headMaterial = new THREE.MeshPhongMaterial({\ncolor: new THREE.Color().setHSL(\n(aiState.relationship / 100) * 0.3, // Hue changes with relationship\n0.8,\n0.6 + (aiState.energy / 200)\n),\nshininess: 100,\ntransparent: true,\nopacity: 0.9 + (aiState.attention / 1000)\n});\nconst head = new THREE.Mesh(headGeometry, headMaterial);\nhead.position.set(0, 1.5, 0);\nhead.castShadow = true;\ngroup.add(head);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 833394534,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 285,
          "code": "const bodyGeometry = new THREE.SphereGeometry(1, 24, 24);\nconst bodyMaterial = new THREE.MeshPhongMaterial({\ncolor: headMaterial.color,\nshininess: 80\n});\nconst body = new THREE.Mesh(bodyGeometry, bodyMaterial);\nbody.scale.set(bodyScale, bodyScale * (1 + Math.sin(breathingPhase) * 0.05), bodyScale);\nbody.position.set(0, 0, 0);\nbody.castShadow = true;\ngroup.add(body);",
          "type": "block"
        },
        {
          "file": "components\\ui\\AdvancedMascotSystem.tsx",
          "line": 240,
          "code": "const bodyGeometry = new THREE.SphereGeometry(1, 24, 24);\nconst bodyMaterial = new THREE.MeshPhongMaterial({\ncolor: headMaterial.color,\nshininess: 80\n});\nconst body = new THREE.Mesh(bodyGeometry, bodyMaterial);\nbody.scale.set(bodyScale, bodyScale * (1 + Math.sin(breathingPhase) * 0.05), bodyScale);\nbody.position.set(0, 0, 0);\nbody.castShadow = true;\ngroup.add(body);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1002760470,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 300,
          "code": "const wingGeometry = new THREE.ConeGeometry(0.5, 1.5, 8);\nconst wingMaterial = new THREE.MeshPhongMaterial({\ncolor: config.secondaryColor,\ntransparent: true,\nopacity: 0.8\n});",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 119,
          "code": "const wingGeometry = new THREE.ConeGeometry(0.5, 1.5, 8);\nconst wingMaterial = new THREE.MeshPhongMaterial({\ncolor: config.secondaryColor,\ntransparent: true,\nopacity: 0.8\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 121322808,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 320,
          "code": "const fairyWingGeometry = new THREE.PlaneGeometry(0.8, 1.2);\nconst fairyWingMaterial = new THREE.MeshPhongMaterial({\ncolor: config.secondaryColor,\ntransparent: true,\nopacity: 0.6,\nside: THREE.DoubleSide\n});",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 139,
          "code": "const fairyWingGeometry = new THREE.PlaneGeometry(0.8, 1.2);\nconst fairyWingMaterial = new THREE.MeshPhongMaterial({\ncolor: config.secondaryColor,\ntransparent: true,\nopacity: 0.6,\nside: THREE.DoubleSide\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1814346976,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 346,
          "code": "const ballGeometry = new THREE.SphereGeometry(0.1);\nconst ballMaterial = new THREE.MeshPhongMaterial({\ncolor: 0xFF0000,\nemissive: 0xFF0000,\nemissiveIntensity: 0.3\n});\nconst ball = new THREE.Mesh(ballGeometry, ballMaterial);\nball.position.y = 2.7;\ngroup.add(ball);\nbreak;",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 165,
          "code": "const ballGeometry = new THREE.SphereGeometry(0.1);\nconst ballMaterial = new THREE.MeshPhongMaterial({\ncolor: 0xFF0000,\nemissive: 0xFF0000,\nemissiveIntensity: 0.3\n});\nconst ball = new THREE.Mesh(ballGeometry, ballMaterial);\nball.position.y = 2.7;\ngroup.add(ball);\nbreak;",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1203959410,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 373,
          "code": "const beakGeometry = new THREE.ConeGeometry(0.15, 0.3, 8);\nconst beakMaterial = new THREE.MeshPhongMaterial({ color: 0xFFA500 });\nconst beak = new THREE.Mesh(beakGeometry, beakMaterial);\nbeak.position.set(0, 1.4, 0.6);\nbeak.rotation.x = Math.PI;\ngroup.add(beak);\nbreak;\n}",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 192,
          "code": "const beakGeometry = new THREE.ConeGeometry(0.15, 0.3, 8);\nconst beakMaterial = new THREE.MeshPhongMaterial({ color: 0xFFA500 });\nconst beak = new THREE.Mesh(beakGeometry, beakMaterial);\nbeak.position.set(0, 1.4, 0.6);\nbeak.rotation.x = Math.PI;\ngroup.add(beak);\nbreak;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1668616608,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 386,
          "code": "switch (itemType) {\ncase 'crown':\nconst crownGeometry = new THREE.CylinderGeometry(0.6, 0.4, 0.3, 8);\nconst crownMaterial = new THREE.MeshPhongMaterial({\ncolor: 0xFFD700,\nshininess: 100\n});\nitemMesh = new THREE.Mesh(crownGeometry, crownMaterial);\nitemMesh.position.set(0, 2.3, 0);\nbreak;",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 215,
          "code": "switch (itemType) {\ncase 'crown':\nconst crownGeometry = new THREE.CylinderGeometry(0.6, 0.4, 0.3, 8);\nconst crownMaterial = new THREE.MeshPhongMaterial({\ncolor: 0xFFD700,\nshininess: 100\n});\nitemMesh = new THREE.Mesh(crownGeometry, crownMaterial);\nitemMesh.position.set(0, 2.3, 0);\nbreak;",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -143730850,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 397,
          "code": "case 'wand':\nconst wandGeometry = new THREE.CylinderGeometry(0.05, 0.05, 1.5);\nconst wandMaterial = new THREE.MeshPhongMaterial({ color: 0x8B4513 });\nitemMesh = new THREE.Mesh(wandGeometry, wandMaterial);\nitemMesh.position.set(1.5, 0, 0);\nitemMesh.rotation.z = -Math.PI / 4;",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 226,
          "code": "case 'wand':\nconst wandGeometry = new THREE.CylinderGeometry(0.05, 0.05, 1.5);\nconst wandMaterial = new THREE.MeshPhongMaterial({ color: 0x8B4513 });\nitemMesh = new THREE.Mesh(wandGeometry, wandMaterial);\nitemMesh.position.set(1.5, 0, 0);\nitemMesh.rotation.z = -Math.PI / 4;",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -33778183,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 405,
          "code": "const starGeometry = new THREE.SphereGeometry(0.2);\nconst starMaterial = new THREE.MeshPhongMaterial({\ncolor: 0xFFD700,\nemissive: 0xFFD700,\nemissiveIntensity: 0.5\n});\nconst star = new THREE.Mesh(starGeometry, starMaterial);\nstar.position.set(0, 0.8, 0);\nitemMesh.add(star);\nbreak;",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 234,
          "code": "const starGeometry = new THREE.SphereGeometry(0.2);\nconst starMaterial = new THREE.MeshPhongMaterial({\ncolor: 0xFFD700,\nemissive: 0xFFD700,\nemissiveIntensity: 0.5\n});\nconst star = new THREE.Mesh(starGeometry, starMaterial);\nstar.position.set(0, 0.8, 0);\nitemMesh.add(star);\nbreak;",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 418063642,
      "occurrences": [
        {
          "file": "components\\HybridMascotSystem.tsx",
          "line": 416,
          "code": "case 'glasses':\nconst glassGeometry = new THREE.TorusGeometry(0.25, 0.05, 8, 16);\nconst glassMaterial = new THREE.MeshPhongMaterial({\ncolor: 0x000000,\ntransparent: true,\nopacity: 0.8\n});\nitemMesh = new THREE.Mesh(glassGeometry, glassMaterial);\nitemMesh.position.set(0, 1.6, 0.4);",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 245,
          "code": "case 'glasses':\nconst glassGeometry = new THREE.TorusGeometry(0.25, 0.05, 8, 16);\nconst glassMaterial = new THREE.MeshPhongMaterial({\ncolor: 0x000000,\ntransparent: true,\nopacity: 0.8\n});\nitemMesh = new THREE.Mesh(glassGeometry, glassMaterial);\nitemMesh.position.set(0, 1.6, 0.4);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1624879017,
      "occurrences": [
        {
          "file": "components\\MascotWardrobe3D.tsx",
          "line": 1215,
          "code": "const rect = e.currentTarget.getBoundingClientRect();\nsetMousePosition({\nx: (e.clientX - rect.left) / rect.width,\ny: (e.clientY - rect.top) / rect.height\n});\n};",
          "type": "block"
        },
        {
          "file": "components\\ui\\SparkyMascot3D.tsx",
          "line": 435,
          "code": "const rect = e.currentTarget.getBoundingClientRect();\nsetMousePosition({\nx: (e.clientX - rect.left) / rect.width,\ny: (e.clientY - rect.top) / rect.height\n});\n};",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 36538981,
      "occurrences": [
        {
          "file": "components\\physics\\PhysicsSystemManager.tsx",
          "line": 284,
          "code": "particle.life -= dt;\nif (particle.life <= 0) {\nreturnParticleToPool(particle);\n}\n});\n}, [config, width, height, returnParticleToPool]);",
          "type": "block"
        },
        {
          "file": "components\\physics\\PhysicsSystemManager.tsx",
          "line": 349,
          "code": "particle.life -= dt;\nif (particle.life <= 0) {\nreturnParticleToPool(particle);\n}\n});\n}, [config, width, height, returnParticleToPool]);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1293526185,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 31,
          "code": "{\nid: 'wizard_hat',\nname: 'Chapeau de Magicien',\ntype: 'hat',\nrarity: 'epic',\nunlockRequirement: { type: 'xp', value: 1000 },\nposition: new THREE.Vector3(0, 2.5, 0),\nscale: new THREE.Vector3(0.8, 1.2, 0.8),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x4B0082,\ngeometry: 'cone',\nmagicalEffect: true,\ndescription: 'Un chapeau magique qui scintille d\\'étoiles !',\nicon: '🧙‍♂️'\n},\n{\nid: 'crown_gold',\nname: 'Couronne Royale',\ntype: 'hat',\nrarity: 'legendary',\nunlockRequirement: { type: 'streak', value: 30 },\nposition: new THREE.Vector3(0, 2.3, 0),\nscale: new THREE.Vector3(0.7, 0.4, 0.7),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFD700,\ngeometry: 'cylinder',\nmagicalEffect: true,\ndescription: 'Pour les vrais champions de l\\'apprentissage !',\nicon: '👑'\n},\n{\nid: 'baseball_cap',\nname: 'Casquette Cool',\ntype: 'hat',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 10 },\nposition: new THREE.Vector3(0, 2.0, 0.2),\nscale: new THREE.Vector3(0.8, 0.3, 0.8),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFF6347,\ngeometry: 'cylinder',\ndescription: 'Style décontracté pour apprendre !',\nicon: '🧢'\n},\n{\nid: 'graduation_cap',\nname: 'Toque d\\'Étudiant',\ntype: 'hat',\nrarity: 'rare',\nunlockRequirement: { type: 'achievement', value: 5 },\nposition: new THREE.Vector3(0, 2.2, 0),\nscale: new THREE.Vector3(0.9, 0.2, 0.9),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x000000,\ngeometry: 'box',\ndescription: 'Symbole de la réussite scolaire !',\nicon: '🎓'\n},",
          "type": "block"
        },
        {
          "file": "components\\WardrobeData.ts",
          "line": 29,
          "code": "{\nid: 'wizard_hat',\nname: 'Chapeau de Magicien',\ntype: 'hat',\nrarity: 'epic',\nunlockRequirement: { type: 'xp', value: 1000 },\nposition: new THREE.Vector3(0, 2.5, 0),\nscale: new THREE.Vector3(0.8, 1.2, 0.8),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x4B0082,\ngeometry: 'cone',\nmagicalEffect: true,\ndescription: 'Un chapeau magique qui scintille d\\'étoiles !',\nicon: '🧙‍♂️'\n},\n{\nid: 'crown_gold',\nname: 'Couronne Royale',\ntype: 'hat',\nrarity: 'legendary',\nunlockRequirement: { type: 'streak', value: 30 },\nposition: new THREE.Vector3(0, 2.3, 0),\nscale: new THREE.Vector3(0.7, 0.4, 0.7),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFD700,\ngeometry: 'cylinder',\nmagicalEffect: true,\ndescription: 'Pour les vrais champions de l\\'apprentissage !',\nicon: '👑'\n},\n{\nid: 'baseball_cap',\nname: 'Casquette Cool',\ntype: 'hat',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 10 },\nposition: new THREE.Vector3(0, 2.0, 0.2),\nscale: new THREE.Vector3(0.8, 0.3, 0.8),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFF6347,\ngeometry: 'cylinder',\ndescription: 'Style décontracté pour apprendre !',\nicon: '🧢'\n},\n{\nid: 'graduation_cap',\nname: 'Toque d\\'Étudiant',\ntype: 'hat',\nrarity: 'rare',\nunlockRequirement: { type: 'achievement', value: 5 },\nposition: new THREE.Vector3(0, 2.2, 0),\nscale: new THREE.Vector3(0.9, 0.2, 0.9),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x000000,\ngeometry: 'box',\ndescription: 'Symbole de la réussite scolaire !',\nicon: '🎓'\n},",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1074654871,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 91,
          "code": "{\nid: 'superhero_cape',\nname: 'Cape de Super-Héros',\ntype: 'clothing',\nrarity: 'epic',\nunlockRequirement: { type: 'xp', value: 2000 },\nposition: new THREE.Vector3(0, 0.5, -0.8),\nscale: new THREE.Vector3(1.2, 1.5, 0.1),\nrotation: new THREE.Vector3(0.2, 0, 0),\ncolor: 0xFF0000,\ngeometry: 'box',\nanimation: 'cape_flow',\nmagicalEffect: true,\ndescription: 'Vole vers la connaissance !',\nicon: '🦸‍♀️'\n},\n{\nid: 'lab_coat',\nname: 'Blouse de Scientifique',\ntype: 'clothing',\nrarity: 'rare',\nunlockRequirement: { type: 'exercises', value: 50 },\nmascotType: ['robot', 'owl'],\nposition: new THREE.Vector3(0, 0, 0.5),\nscale: new THREE.Vector3(1.1, 1.3, 0.2),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFFFFF,\ngeometry: 'box',\ndescription: 'Parfait pour les expériences !',\nicon: '🥽'\n},\n{\nid: 'rainbow_shirt',\nname: 'T-shirt Arc-en-ciel',\ntype: 'clothing',\nrarity: 'rare',\nunlockRequirement: { type: 'streak', value: 7 },\nposition: new THREE.Vector3(0, 0.2, 0.4),\nscale: new THREE.Vector3(1.0, 0.8, 0.2),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFF69B4,\ngeometry: 'box',\nmagicalEffect: true,\ndescription: 'Couleurs magiques de l\\'apprentissage !',\nicon: '🌈'\n},",
          "type": "block"
        },
        {
          "file": "components\\WardrobeData.ts",
          "line": 89,
          "code": "{\nid: 'superhero_cape',\nname: 'Cape de Super-Héros',\ntype: 'clothing',\nrarity: 'epic',\nunlockRequirement: { type: 'xp', value: 2000 },\nposition: new THREE.Vector3(0, 0.5, -0.8),\nscale: new THREE.Vector3(1.2, 1.5, 0.1),\nrotation: new THREE.Vector3(0.2, 0, 0),\ncolor: 0xFF0000,\ngeometry: 'box',\nanimation: 'cape_flow',\nmagicalEffect: true,\ndescription: 'Vole vers la connaissance !',\nicon: '🦸‍♀️'\n},\n{\nid: 'lab_coat',\nname: 'Blouse de Scientifique',\ntype: 'clothing',\nrarity: 'rare',\nunlockRequirement: { type: 'exercises', value: 50 },\nmascotType: ['robot', 'owl'],\nposition: new THREE.Vector3(0, 0, 0.5),\nscale: new THREE.Vector3(1.1, 1.3, 0.2),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFFFFF,\ngeometry: 'box',\ndescription: 'Parfait pour les expériences !',\nicon: '🥽'\n},\n{\nid: 'rainbow_shirt',\nname: 'T-shirt Arc-en-ciel',\ntype: 'clothing',\nrarity: 'rare',\nunlockRequirement: { type: 'streak', value: 7 },\nposition: new THREE.Vector3(0, 0.2, 0.4),\nscale: new THREE.Vector3(1.0, 0.8, 0.2),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFF69B4,\ngeometry: 'box',\nmagicalEffect: true,\ndescription: 'Couleurs magiques de l\\'apprentissage !',\nicon: '🌈'\n},",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1211799499,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 139,
          "code": "{\nid: 'magic_glasses',\nname: 'Lunettes Magiques',\ntype: 'accessory',\nrarity: 'rare',\nunlockRequirement: { type: 'xp', value: 500 },\nposition: new THREE.Vector3(0, 1.6, 0.45),\nscale: new THREE.Vector3(0.6, 0.2, 0.1),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x000080,\ngeometry: 'box',\nmagicalEffect: true,\ndescription: 'Vois les solutions plus clairement !',\nicon: '👓'\n},\n{\nid: 'magic_wand',\nname: 'Baguette Magique',\ntype: 'accessory',\nrarity: 'epic',\nunlockRequirement: { type: 'achievement', value: 10 },\nmascotType: ['fairy', 'dragon'],\nposition: new THREE.Vector3(1.2, 0.5, 0),\nscale: new THREE.Vector3(0.1, 1.5, 0.1),\nrotation: new THREE.Vector3(0, 0, -0.3),\ncolor: 0x8B4513,\ngeometry: 'cylinder',\nmagicalEffect: true,\nanimation: 'wand_sparkle',\ndescription: 'Transforme chaque erreur en apprentissage !',\nicon: '🪄'\n},\n{\nid: 'bow_tie',\nname: 'Nœud Papillon Élégant',\ntype: 'accessory',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 25 },\nposition: new THREE.Vector3(0, 1.2, 0.5),\nscale: new THREE.Vector3(0.4, 0.2, 0.15),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x800080,\ngeometry: 'box',\ndescription: 'Pour les occasions spéciales !',\nicon: '🎀'\n},\n{\nid: 'medal_bronze',\nname: 'Médaille de Bronze',\ntype: 'accessory',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 20 },\nposition: new THREE.Vector3(0, 0.8, 0.5),\nscale: new THREE.Vector3(0.3, 0.3, 0.05),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xCD7F32,\ngeometry: 'cylinder',\ndescription: 'Première étape vers la gloire !',\nicon: '🥉'\n},\n{\nid: 'medal_silver',\nname: 'Médaille d\\'Argent',\ntype: 'accessory',\nrarity: 'rare',\nunlockRequirement: { type: 'streak', value: 14 },\nposition: new THREE.Vector3(0, 0.8, 0.5),\nscale: new THREE.Vector3(0.3, 0.3, 0.05),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xC0C0C0,\ngeometry: 'cylinder',\ndescription: 'Excellent progrès !',\nicon: '🥈'\n},\n{\nid: 'medal_gold',\nname: 'Médaille d\\'Or',\ntype: 'accessory',\nrarity: 'epic',\nunlockRequirement: { type: 'streak', value: 21 },\nposition: new THREE.Vector3(0, 0.8, 0.5),\nscale: new THREE.Vector3(0.3, 0.3, 0.05),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFD700,\ngeometry: 'cylinder',\nmagicalEffect: true,\ndescription: 'Champion de l\\'apprentissage !',\nicon: '🥇'\n},",
          "type": "block"
        },
        {
          "file": "components\\WardrobeData.ts",
          "line": 137,
          "code": "{\nid: 'magic_glasses',\nname: 'Lunettes Magiques',\ntype: 'accessory',\nrarity: 'rare',\nunlockRequirement: { type: 'xp', value: 500 },\nposition: new THREE.Vector3(0, 1.6, 0.45),\nscale: new THREE.Vector3(0.6, 0.2, 0.1),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x000080,\ngeometry: 'box',\nmagicalEffect: true,\ndescription: 'Vois les solutions plus clairement !',\nicon: '👓'\n},\n{\nid: 'magic_wand',\nname: 'Baguette Magique',\ntype: 'accessory',\nrarity: 'epic',\nunlockRequirement: { type: 'achievement', value: 10 },\nmascotType: ['fairy', 'dragon'],\nposition: new THREE.Vector3(1.2, 0.5, 0),\nscale: new THREE.Vector3(0.1, 1.5, 0.1),\nrotation: new THREE.Vector3(0, 0, -0.3),\ncolor: 0x8B4513,\ngeometry: 'cylinder',\nmagicalEffect: true,\nanimation: 'wand_sparkle',\ndescription: 'Transforme chaque erreur en apprentissage !',\nicon: '🪄'\n},\n{\nid: 'bow_tie',\nname: 'Nœud Papillon Élégant',\ntype: 'accessory',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 25 },\nposition: new THREE.Vector3(0, 1.2, 0.5),\nscale: new THREE.Vector3(0.4, 0.2, 0.15),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x800080,\ngeometry: 'box',\ndescription: 'Pour les occasions spéciales !',\nicon: '🎀'\n},\n{\nid: 'medal_bronze',\nname: 'Médaille de Bronze',\ntype: 'accessory',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 20 },\nposition: new THREE.Vector3(0, 0.8, 0.5),\nscale: new THREE.Vector3(0.3, 0.3, 0.05),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xCD7F32,\ngeometry: 'cylinder',\ndescription: 'Première étape vers la gloire !',\nicon: '🥉'\n},\n{\nid: 'medal_silver',\nname: 'Médaille d\\'Argent',\ntype: 'accessory',\nrarity: 'rare',\nunlockRequirement: { type: 'streak', value: 14 },\nposition: new THREE.Vector3(0, 0.8, 0.5),\nscale: new THREE.Vector3(0.3, 0.3, 0.05),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xC0C0C0,\ngeometry: 'cylinder',\ndescription: 'Excellent progrès !',\nicon: '🥈'\n},\n{\nid: 'medal_gold',\nname: 'Médaille d\\'Or',\ntype: 'accessory',\nrarity: 'epic',\nunlockRequirement: { type: 'streak', value: 21 },\nposition: new THREE.Vector3(0, 0.8, 0.5),\nscale: new THREE.Vector3(0.3, 0.3, 0.05),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFD700,\ngeometry: 'cylinder',\nmagicalEffect: true,\ndescription: 'Champion de l\\'apprentissage !',\nicon: '🥇'\n},",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1108565497,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 230,
          "code": "{\nid: 'magic_boots',\nname: 'Bottes Magiques',\ntype: 'shoes',\nrarity: 'epic',\nunlockRequirement: { type: 'xp', value: 1500 },\nposition: new THREE.Vector3(0, -1.2, 0.3),\nscale: new THREE.Vector3(0.6, 0.4, 0.8),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x4B0082,\ngeometry: 'box',\nmagicalEffect: true,\nanimation: 'boots_glow',\ndescription: 'Marche vers le succès avec style !',\nicon: '👢'\n},\n{\nid: 'sneakers',\nname: 'Baskets de Champion',\ntype: 'shoes',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 15 },\nposition: new THREE.Vector3(0, -1.2, 0.2),\nscale: new THREE.Vector3(0.5, 0.3, 0.7),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x00FF00,\ngeometry: 'box',\ndescription: 'Confort et performance !',\nicon: '👟'\n},",
          "type": "block"
        },
        {
          "file": "components\\WardrobeData.ts",
          "line": 228,
          "code": "{\nid: 'magic_boots',\nname: 'Bottes Magiques',\ntype: 'shoes',\nrarity: 'epic',\nunlockRequirement: { type: 'xp', value: 1500 },\nposition: new THREE.Vector3(0, -1.2, 0.3),\nscale: new THREE.Vector3(0.6, 0.4, 0.8),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x4B0082,\ngeometry: 'box',\nmagicalEffect: true,\nanimation: 'boots_glow',\ndescription: 'Marche vers le succès avec style !',\nicon: '👢'\n},\n{\nid: 'sneakers',\nname: 'Baskets de Champion',\ntype: 'shoes',\nrarity: 'common',\nunlockRequirement: { type: 'exercises', value: 15 },\nposition: new THREE.Vector3(0, -1.2, 0.2),\nscale: new THREE.Vector3(0.5, 0.3, 0.7),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0x00FF00,\ngeometry: 'box',\ndescription: 'Confort et performance !',\nicon: '👟'\n},",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -308277416,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 262,
          "code": "{\nid: 'rainbow_aura',\nname: 'Aura Arc-en-ciel',\ntype: 'special',\nrarity: 'legendary',\nunlockRequirement: { type: 'achievement', value: 25 },\nposition: new THREE.Vector3(0, 0, 0),\nscale: new THREE.Vector3(2, 2, 2),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFFFFF,\ngeometry: 'sphere',\nanimation: 'rainbow_pulse',\nmagicalEffect: true,\ndescription: 'Rayonne de toute la magie de tes apprentissages !',\nicon: '✨'\n},\n{\nid: 'fire_wings',\nname: 'Ailes de Feu',\ntype: 'special',\nrarity: 'legendary',\nunlockRequirement: { type: 'xp', value: 5000 },\nmascotType: ['dragon', 'fairy'],\nposition: new THREE.Vector3(0, 0.5, -0.5),\nscale: new THREE.Vector3(1.5, 1.0, 0.2),\nrotation: new THREE.Vector3(0.2, 0, 0),\ncolor: 0xFF4500,\ngeometry: 'box',\nanimation: 'wing_flap',\nmagicalEffect: true,\ndescription: 'Vole au sommet de tes capacités !',\nicon: '🔥'\n}\n];",
          "type": "block"
        },
        {
          "file": "components\\WardrobeData.ts",
          "line": 260,
          "code": "{\nid: 'rainbow_aura',\nname: 'Aura Arc-en-ciel',\ntype: 'special',\nrarity: 'legendary',\nunlockRequirement: { type: 'achievement', value: 25 },\nposition: new THREE.Vector3(0, 0, 0),\nscale: new THREE.Vector3(2, 2, 2),\nrotation: new THREE.Vector3(0, 0, 0),\ncolor: 0xFFFFFF,\ngeometry: 'sphere',\nanimation: 'rainbow_pulse',\nmagicalEffect: true,\ndescription: 'Rayonne de toute la magie de tes apprentissages !',\nicon: '✨'\n},\n{\nid: 'fire_wings',\nname: 'Ailes de Feu',\ntype: 'special',\nrarity: 'legendary',\nunlockRequirement: { type: 'xp', value: 5000 },\nmascotType: ['dragon', 'fairy'],\nposition: new THREE.Vector3(0, 0.5, -0.5),\nscale: new THREE.Vector3(1.5, 1.0, 0.2),\nrotation: new THREE.Vector3(0.2, 0, 0),\ncolor: 0xFF4500,\ngeometry: 'box',\nanimation: 'wing_flap',\nmagicalEffect: true,\ndescription: 'Vole au sommet de tes capacités !',\nicon: '🔥'\n}\n];",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 905571100,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 298,
          "code": "interface WardrobeSystemProps {\nstudentStats: {\nxp: number;\nstreak: number;\nexercisesCompleted: number;\nachievementsUnlocked: number;\n};\nmascotType: 'dragon' | 'fairy' | 'robot' | 'cat' | 'owl';\nequippedItems: string[];\nonItemEquip: (itemId: string) => void;\nonItemUnequip: (itemId: string) => void;\nonNewItemUnlocked: (item: WardrobeItem) => void;\n}",
          "type": "block"
        },
        {
          "file": "components\\WardrobeSystem.tsx",
          "line": 24,
          "code": "interface WardrobeSystemProps {\nstudentStats: {\nxp: number;\nstreak: number;\nexercisesCompleted: number;\nachievementsUnlocked: number;\n};\nmascotType: 'dragon' | 'fairy' | 'robot' | 'cat' | 'owl';\nequippedItems: string[];\nonItemEquip: (itemId: string) => void;\nonItemUnequip: (itemId: string) => void;\nonNewItemUnlocked: (item: WardrobeItem) => void;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1709546536,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 367,
          "code": "const rarityColors = {\ncommon: 'from-gray-400 to-gray-600',\nrare: 'from-blue-400 to-blue-600',\nepic: 'from-purple-400 to-purple-600',\nlegendary: 'from-yellow-400 to-orange-500'\n};",
          "type": "block"
        },
        {
          "file": "components\\WardrobeSystem.tsx",
          "line": 130,
          "code": "const rarityColors = {\ncommon: 'from-gray-400 to-gray-600',\nrare: 'from-blue-400 to-blue-600',\nepic: 'from-purple-400 to-purple-600',\nlegendary: 'from-yellow-400 to-orange-500'\n};",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -461046194,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 375,
          "code": "const categories = [\n{ id: 'all', name: 'Tous', icon: '👕' },\n{ id: 'hat', name: 'Chapeaux', icon: '🎩' },\n{ id: 'clothing', name: 'Vêtements', icon: '👔' },\n{ id: 'accessory', name: 'Accessoires', icon: '👓' },\n{ id: 'shoes', name: 'Chaussures', icon: '👟' },\n{ id: 'special', name: 'Spéciaux', icon: '✨' }\n];",
          "type": "block"
        },
        {
          "file": "components\\WardrobeSystem.tsx",
          "line": 138,
          "code": "const categories = [\n{ id: 'all', name: 'Tous', icon: '👕' },\n{ id: 'hat', name: 'Chapeaux', icon: '🎩' },\n{ id: 'clothing', name: 'Vêtements', icon: '👔' },\n{ id: 'accessory', name: 'Accessoires', icon: '👓' },\n{ id: 'shoes', name: 'Chaussures', icon: '👟' },\n{ id: 'special', name: 'Spéciaux', icon: '✨' }\n];",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -684531445,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 474,
          "code": "{/* Rarity */}\n<div className={`text-xs text-center font-medium mb-2 ${\nitem.rarity === 'common' ? 'text-gray-600' :\nitem.rarity === 'rare' ? 'text-blue-600' :\nitem.rarity === 'epic' ? 'text-purple-600' :\n'text-yellow-600'\n}`}>\n{item.rarity === 'common' ? 'Commun' :\nitem.rarity === 'rare' ? 'Rare' :\nitem.rarity === 'epic' ? 'Épique' :\n'Légendaire'}\n</div>",
          "type": "block"
        },
        {
          "file": "components\\WardrobeSystem.tsx",
          "line": 436,
          "code": "{/* Rarity */}\n<div className={`text-xs text-center font-medium mb-2 ${\nitem.rarity === 'common' ? 'text-gray-600' :\nitem.rarity === 'rare' ? 'text-blue-600' :\nitem.rarity === 'epic' ? 'text-purple-600' :\n'text-yellow-600'\n}`}>\n{item.rarity === 'common' ? 'Commun' :\nitem.rarity === 'rare' ? 'Rare' :\nitem.rarity === 'epic' ? 'Épique' :\n'Légendaire'}\n</div>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -646542696,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 492,
          "code": "{/* Magical Effect Indicator */}\n{item.magicalEffect && (\n<div className=\"absolute top-2 left-2\">\n<div className=\"w-3 h-3 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full animate-pulse\" />\n</div>\n)}",
          "type": "block"
        },
        {
          "file": "components\\WardrobeSystem.tsx",
          "line": 454,
          "code": "{/* Magical Effect Indicator */}\n{item.magicalEffect && (\n<div className=\"absolute top-2 left-2\">\n<div className=\"w-3 h-3 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full animate-pulse\" />\n</div>\n)}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1030857911,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 499,
          "code": "{/* Equipped Badge */}\n{isEquipped && (\n<div className=\"absolute bottom-2 right-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full\">\n✓ Porté\n</div>\n)}\n</motion.div>\n);\n})}\n</div>",
          "type": "block"
        },
        {
          "file": "components\\WardrobeSystem.tsx",
          "line": 461,
          "code": "{/* Equipped Badge */}\n{isEquipped && (\n<div className=\"absolute bottom-2 right-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full\">\n✓ Porté\n</div>\n)}\n</motion.div>\n);\n})}\n</div>",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1214308094,
      "occurrences": [
        {
          "file": "components\\ui\\WardrobeSystem.tsx",
          "line": 510,
          "code": "{/* No Items Message */}\n{filteredItems.length === 0 && (\n<div className=\"text-center py-8\">\n<div className=\"text-6xl mb-4\">🎁</div>\n<div className=\"text-xl font-bold text-gray-600 mb-2\">\nAucun objet débloqué dans cette catégorie\n</div>\n<div className=\"text-gray-500\">\nContinue d'apprendre pour débloquer de nouveaux prix !\n</div>\n</div>\n)}",
          "type": "block"
        },
        {
          "file": "components\\WardrobeSystem.tsx",
          "line": 472,
          "code": "{/* No Items Message */}\n{filteredItems.length === 0 && (\n<div className=\"text-center py-8\">\n<div className=\"text-6xl mb-4\">🎁</div>\n<div className=\"text-xl font-bold text-gray-600 mb-2\">\nAucun objet débloqué dans cette catégorie\n</div>\n<div className=\"text-gray-500\">\nContinue d'apprendre pour débloquer de nouveaux prix !\n</div>\n</div>\n)}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 443472915,
      "occurrences": [
        {
          "file": "components\\__tests__\\Header.test.tsx",
          "line": 26,
          "code": "jest.mock('../ui/Button', () => ({\nButton: ({ onClick, children, icon, className, ...props }: any) => (\n<button onClick={onClick} className={className} {...props}>\n{icon}\n{children}\n</button>\n),\n}));",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Modal.test.tsx",
          "line": 18,
          "code": "jest.mock('../ui/Button', () => ({\nButton: ({ onClick, children, icon, className, ...props }: any) => (\n<button onClick={onClick} className={className} {...props}>\n{icon}\n{children}\n</button>\n),\n}));",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1308518912,
      "occurrences": [
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 305,
          "code": "render(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 369,
          "code": "render(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 393,
          "code": "render(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 416,
          "code": "render(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 456,
          "code": "render(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 529,
          "code": "render(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 590,
          "code": "render(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1173085438,
      "occurrences": [
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 497,
          "code": "it('should have proper navigation structure', () => {\nrender(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        },
        {
          "file": "components\\__tests__\\Sidebar.test.tsx",
          "line": 652,
          "code": "it('should have proper navigation structure', () => {\nrender(\n<Sidebar\nitems={defaultItems}\ncurrentPath=\"/dashboard\"\nonNavigate={mockOnNavigate}\n/>\n);",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1403744063,
      "occurrences": [
        {
          "file": "hooks\\useMascotData.ts",
          "line": 104,
          "code": "return {\n...prev,\nitems: newItems,\nequippedItems: newEquippedItems\n};\n});",
          "type": "block"
        },
        {
          "file": "hooks\\useMascotData.ts",
          "line": 128,
          "code": "return {\n...prev,\nitems: newItems,\nequippedItems: newEquippedItems\n};\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1801384450,
      "occurrences": [
        {
          "file": "pages\\ExerciseEngineTest.tsx",
          "line": 99,
          "code": "const response = await fetch(url, {\nheaders: {\n'Authorization': `Bearer ${token}`,\n'Content-Type': 'application/json'\n}\n});",
          "type": "block"
        },
        {
          "file": "pages\\Exercises.tsx",
          "line": 85,
          "code": "const response = await fetch(url, {\nheaders: {\n'Authorization': `Bearer ${token}`,\n'Content-Type': 'application/json'\n}\n});",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1262520912,
      "occurrences": [
        {
          "file": "services\\adaptive-learning.service.ts",
          "line": 499,
          "code": "private getConsecutiveErrors(attempts: any[]): number {\nlet consecutive = 0;\nfor (const attempt of attempts) {\nif (!attempt.reussi) {\nconsecutive++;\n} else {\nbreak;\n}\n}\nreturn consecutive;\n}",
          "type": "block"
        },
        {
          "file": "services\\exercise.service.ts",
          "line": 260,
          "code": "private getConsecutiveErrors(attempts: any[]): number {\nlet consecutive = 0;\nfor (const attempt of attempts) {\nif (!attempt.reussi) {\nconsecutive++;\n} else {\nbreak;\n}\n}\nreturn consecutive;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -2073482692,
      "occurrences": [
        {
          "file": "types\\api.types.ts",
          "line": 7,
          "code": "export interface ApiResponse<T = any> {\nsuccess: boolean;\ndata?: T;\nerror?: string | {\nmessage: string;\ncode?: string;\ndetails?: any;\n};\nmessage?: string;\ntimestamp?: string;\n}",
          "type": "block"
        },
        {
          "file": "types\\shared.ts",
          "line": 6,
          "code": "export interface ApiResponse<T = any> {\nsuccess: boolean;\ndata?: T;\nerror?: string | {\nmessage: string;\ncode?: string;\ndetails?: any;\n};\nmessage?: string;\ntimestamp?: string;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 165615389,
      "occurrences": [
        {
          "file": "types\\exercise.types.ts",
          "line": 11,
          "code": "export interface DragItem {\nid: string;\ncontent: string;\ncategory?: string;\ntype: string;\n}",
          "type": "block"
        },
        {
          "file": "types\\index.ts",
          "line": 14,
          "code": "export interface DragItem {\nid: string;\ncontent: string;\ncategory?: string;\ntype: string;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -2039899775,
      "occurrences": [
        {
          "file": "types\\exercise.types.ts",
          "line": 18,
          "code": "export interface DropZone {\nid: string;\nlabel: string;\naccepts?: string[];\ncurrentItem?: DragItem | null;\n}",
          "type": "block"
        },
        {
          "file": "types\\index.ts",
          "line": 21,
          "code": "export interface DropZone {\nid: string;\nlabel: string;\naccepts?: string[];\ncurrentItem?: DragItem | null;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1422796545,
      "occurrences": [
        {
          "file": "utils\\animationOptimized.ts",
          "line": 166,
          "code": "this.isRunning = false;\nif (this.rafId) {\ncancelAnimationFrame(this.rafId);\nthis.rafId = null;\n}\n}",
          "type": "block"
        },
        {
          "file": "utils\\mobileFrameRate.ts",
          "line": 226,
          "code": "this.isRunning = false;\nif (this.rafId) {\ncancelAnimationFrame(this.rafId);\nthis.rafId = null;\n}\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": -1477602688,
      "occurrences": [
        {
          "file": "utils\\bundleOptimized.ts",
          "line": 67,
          "code": "public static getInstance(): BundleOptimizer {\nif (!BundleOptimizer.instance) {\nBundleOptimizer.instance = new BundleOptimizer();\n}\nreturn BundleOptimizer.instance;\n}",
          "type": "block"
        },
        {
          "file": "utils\\bundleOptimizer.ts",
          "line": 35,
          "code": "public static getInstance(): BundleOptimizer {\nif (!BundleOptimizer.instance) {\nBundleOptimizer.instance = new BundleOptimizer();\n}\nreturn BundleOptimizer.instance;\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1527318588,
      "occurrences": [
        {
          "file": "utils\\propValidation.ts",
          "line": 207,
          "code": "for (const [propName, validator] of Object.entries(schema)) {\nif (propName in props) {\nconst result = validator(props[propName]);\nif (!result.isValid) {\nerrors.push({\nproperty: propName,\nexpected: 'Valid value according to schema',\nreceived: typeof props[propName],\nvalue: props[propName]\n});\n} else {\nsanitizedProps[propName] = result.sanitizedValue;\n}\n}\n}",
          "type": "block"
        },
        {
          "file": "utils\\propValidation.ts",
          "line": 271,
          "code": "for (const [propName, validator] of Object.entries(schema)) {\nif (propName in props) {\nconst result = validator(props[propName]);\nif (!result.isValid) {\nerrors.push({\nproperty: propName,\nexpected: 'Valid value according to schema',\nreceived: typeof props[propName],\nvalue: props[propName]\n});\n} else {\nsanitizedProps[propName] = result.sanitizedValue;\n}\n}\n}",
          "type": "block"
        },
        {
          "file": "utils\\propValidation.ts",
          "line": 320,
          "code": "for (const [propName, validator] of Object.entries(schema)) {\nif (propName in props) {\nconst result = validator(props[propName]);\nif (!result.isValid) {\nerrors.push({\nproperty: propName,\nexpected: 'Valid value according to schema',\nreceived: typeof props[propName],\nvalue: props[propName]\n});\n} else {\nsanitizedProps[propName] = result.sanitizedValue;\n}\n}\n}",
          "type": "block"
        },
        {
          "file": "utils\\propValidation.ts",
          "line": 351,
          "code": "for (const [propName, validator] of Object.entries(schema)) {\nif (propName in props) {\nconst result = validator(props[propName]);\nif (!result.isValid) {\nerrors.push({\nproperty: propName,\nexpected: 'Valid value according to schema',\nreceived: typeof props[propName],\nvalue: props[propName]\n});\n} else {\nsanitizedProps[propName] = result.sanitizedValue;\n}\n}\n}",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    },
    {
      "hash": 1344049819,
      "occurrences": [
        {
          "file": "utils\\propValidation.ts",
          "line": 234,
          "code": "return {\nisValid: errors.length === 0,\nerrors,\nsanitizedProps\n};\n};",
          "type": "block"
        },
        {
          "file": "utils\\propValidation.ts",
          "line": 287,
          "code": "return {\nisValid: errors.length === 0,\nerrors,\nsanitizedProps\n};\n};",
          "type": "block"
        },
        {
          "file": "utils\\propValidation.ts",
          "line": 336,
          "code": "return {\nisValid: errors.length === 0,\nerrors,\nsanitizedProps\n};\n};",
          "type": "block"
        },
        {
          "file": "utils\\propValidation.ts",
          "line": 367,
          "code": "return {\nisValid: errors.length === 0,\nerrors,\nsanitizedProps\n};\n};",
          "type": "block"
        }
      ],
      "similarity": 100,
      "suggestion": "Extract common code into a utility function or shared component"
    }
  ],
  "naming": [
    {
      "type": "function_naming",
      "file": "App.tsx",
      "line": 10,
      "issue": "Function should use camelCase",
      "current": "App",
      "suggested": "app"
    },
    {
      "type": "variable_naming",
      "file": "components\\AdvancedMascotSystem.tsx",
      "line": 41,
      "issue": "Variable should use camelCase",
      "current": "AdvancedMascotSystem",
      "suggested": "advancedMascotSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\AdvancedParticleEngine.tsx",
      "line": 48,
      "issue": "Variable should use camelCase",
      "current": "AdvancedParticleEngine",
      "suggested": "advancedParticleEngine"
    },
    {
      "type": "variable_naming",
      "file": "components\\AIPersonalityTester.tsx",
      "line": 35,
      "issue": "Variable should use camelCase",
      "current": "AIPersonalityTester",
      "suggested": "aIPersonalityTester"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 20,
      "issue": "Variable should use camelCase",
      "current": "AnalyticsDashboard",
      "suggested": "analyticsDashboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 222,
      "issue": "Variable should use camelCase",
      "current": "OverviewTab",
      "suggested": "overviewTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 308,
      "issue": "Variable should use camelCase",
      "current": "XPAnalyticsTab",
      "suggested": "xPAnalyticsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 370,
      "issue": "Variable should use camelCase",
      "current": "WardrobeAnalyticsTab",
      "suggested": "wardrobeAnalyticsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 424,
      "issue": "Variable should use camelCase",
      "current": "PerformanceAnalyticsTab",
      "suggested": "performanceAnalyticsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 473,
      "issue": "Variable should use camelCase",
      "current": "ErrorAnalyticsTab",
      "suggested": "errorAnalyticsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 516,
      "issue": "Variable should use camelCase",
      "current": "LoadTimeAnalyticsTab",
      "suggested": "loadTimeAnalyticsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\analytics\\AnalyticsDashboard.tsx",
      "line": 561,
      "issue": "Variable should use camelCase",
      "current": "MetricCard",
      "suggested": "metricCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\CP2025Demo.tsx",
      "line": 249,
      "issue": "Variable should use camelCase",
      "current": "CP2025Demo",
      "suggested": "cP2025Demo"
    },
    {
      "type": "variable_naming",
      "file": "components\\CP2025ExtendedDemo.tsx",
      "line": 189,
      "issue": "Variable should use camelCase",
      "current": "CP2025ExtendedDemo",
      "suggested": "cP2025ExtendedDemo"
    },
    {
      "type": "variable_naming",
      "file": "components\\CP2025UsageExample.tsx",
      "line": 5,
      "issue": "Variable should use camelCase",
      "current": "CP2025UsageExample",
      "suggested": "cP2025UsageExample"
    },
    {
      "type": "variable_naming",
      "file": "components\\CrossBrowserMascot3D.tsx",
      "line": 30,
      "issue": "Variable should use camelCase",
      "current": "CrossBrowserMascot3D",
      "suggested": "crossBrowserMascot3D"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\AchievementBadges.tsx",
      "line": 27,
      "issue": "Variable should use camelCase",
      "current": "AchievementBadges",
      "suggested": "achievementBadges"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\AnalyticsCharts.tsx",
      "line": 58,
      "issue": "Variable should use camelCase",
      "current": "AnalyticsCharts",
      "suggested": "analyticsCharts"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 36,
      "issue": "Variable should use camelCase",
      "current": "CompetencyCard",
      "suggested": "competencyCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 73,
      "issue": "Variable should use camelCase",
      "current": "EngagementAnalyzer",
      "suggested": "engagementAnalyzer"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 154,
      "issue": "Variable should use camelCase",
      "current": "GameToEducationTranslator",
      "suggested": "gameToEducationTranslator"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 209,
      "issue": "Variable should use camelCase",
      "current": "EducationalDashboard",
      "suggested": "educationalDashboard"
    },
    {
      "type": "function_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 36,
      "issue": "Function should use camelCase",
      "current": "CompetencyCard",
      "suggested": "competencyCard"
    },
    {
      "type": "function_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 73,
      "issue": "Function should use camelCase",
      "current": "EngagementAnalyzer",
      "suggested": "engagementAnalyzer"
    },
    {
      "type": "function_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 154,
      "issue": "Function should use camelCase",
      "current": "GameToEducationTranslator",
      "suggested": "gameToEducationTranslator"
    },
    {
      "type": "function_naming",
      "file": "components\\dashboard\\EducationalDashboard.tsx",
      "line": 209,
      "issue": "Function should use camelCase",
      "current": "EducationalDashboard",
      "suggested": "educationalDashboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\MasteryLevelsCard.tsx",
      "line": 27,
      "issue": "Variable should use camelCase",
      "current": "MasteryLevelsCard",
      "suggested": "masteryLevelsCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\PrerequisiteVisualization.tsx",
      "line": 52,
      "issue": "Variable should use camelCase",
      "current": "PrerequisiteVisualization",
      "suggested": "prerequisiteVisualization"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\StudentDashboard.tsx",
      "line": 87,
      "issue": "Variable should use camelCase",
      "current": "StudentDashboard",
      "suggested": "studentDashboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\StudentDashboard.tsx",
      "line": 639,
      "issue": "Variable should use camelCase",
      "current": "StatCard",
      "suggested": "statCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\dashboard\\StudentDashboard.tsx",
      "line": 676,
      "issue": "Variable should use camelCase",
      "current": "GoalCard",
      "suggested": "goalCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\AIStateVisualizationDashboard.tsx",
      "line": 128,
      "issue": "Variable should use camelCase",
      "current": "AIStateVisualizationDashboard",
      "suggested": "aIStateVisualizationDashboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\AIStateVisualizationDashboard.tsx",
      "line": 770,
      "issue": "Variable should use camelCase",
      "current": "OverviewTab",
      "suggested": "overviewTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\AIStateVisualizationDashboard.tsx",
      "line": 845,
      "issue": "Variable should use camelCase",
      "current": "BehaviorTab",
      "suggested": "behaviorTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\AIStateVisualizationDashboard.tsx",
      "line": 849,
      "issue": "Variable should use camelCase",
      "current": "MemoryTab",
      "suggested": "memoryTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\AIStateVisualizationDashboard.tsx",
      "line": 853,
      "issue": "Variable should use camelCase",
      "current": "EmotionsTab",
      "suggested": "emotionsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\AIStateVisualizationDashboard.tsx",
      "line": 857,
      "issue": "Variable should use camelCase",
      "current": "PerformanceTab",
      "suggested": "performanceTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 78,
      "issue": "Variable should use camelCase",
      "current": "Scene3DInspector",
      "suggested": "scene3DInspector"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 502,
      "issue": "Variable should use camelCase",
      "current": "HierarchyTab",
      "suggested": "hierarchyTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 558,
      "issue": "Variable should use camelCase",
      "current": "TransformTab",
      "suggested": "transformTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 703,
      "issue": "Variable should use camelCase",
      "current": "CameraTab",
      "suggested": "cameraTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 814,
      "issue": "Variable should use camelCase",
      "current": "LightsTab",
      "suggested": "lightsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 938,
      "issue": "Variable should use camelCase",
      "current": "MascotTab",
      "suggested": "mascotTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 1020,
      "issue": "Variable should use camelCase",
      "current": "MaterialsTab",
      "suggested": "materialsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\Scene3DInspector.tsx",
      "line": 1092,
      "issue": "Variable should use camelCase",
      "current": "Vector3Input",
      "suggested": "vector3Input"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\WardrobeTestingInterface.tsx",
      "line": 76,
      "issue": "Variable should use camelCase",
      "current": "WardrobeTestingInterface",
      "suggested": "wardrobeTestingInterface"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\WardrobeTestingInterface.tsx",
      "line": 702,
      "issue": "Variable should use camelCase",
      "current": "ItemsTab",
      "suggested": "itemsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\WardrobeTestingInterface.tsx",
      "line": 869,
      "issue": "Variable should use camelCase",
      "current": "SetsTab",
      "suggested": "setsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\WardrobeTestingInterface.tsx",
      "line": 958,
      "issue": "Variable should use camelCase",
      "current": "TestingTab",
      "suggested": "testingTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\WardrobeTestingInterface.tsx",
      "line": 1055,
      "issue": "Variable should use camelCase",
      "current": "PerformanceTab",
      "suggested": "performanceTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\WardrobeTestingInterface.tsx",
      "line": 1147,
      "issue": "Variable should use camelCase",
      "current": "CompatibilityTab",
      "suggested": "compatibilityTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\XPSystemDebugPanel.tsx",
      "line": 65,
      "issue": "Variable should use camelCase",
      "current": "XPSystemDebugPanel",
      "suggested": "xPSystemDebugPanel"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\XPSystemDebugPanel.tsx",
      "line": 418,
      "issue": "Variable should use camelCase",
      "current": "PhysicsTab",
      "suggested": "physicsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\XPSystemDebugPanel.tsx",
      "line": 560,
      "issue": "Variable should use camelCase",
      "current": "VisualTab",
      "suggested": "visualTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\XPSystemDebugPanel.tsx",
      "line": 647,
      "issue": "Variable should use camelCase",
      "current": "PerformanceTab",
      "suggested": "performanceTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\XPSystemDebugPanel.tsx",
      "line": 729,
      "issue": "Variable should use camelCase",
      "current": "EventsTab",
      "suggested": "eventsTab"
    },
    {
      "type": "variable_naming",
      "file": "components\\debug\\XPSystemDebugPanel.tsx",
      "line": 795,
      "issue": "Variable should use camelCase",
      "current": "ParameterSlider",
      "suggested": "parameterSlider"
    },
    {
      "type": "variable_naming",
      "file": "components\\ErrorBoundary\\AsyncErrorBoundary.tsx",
      "line": 6,
      "issue": "Variable should use camelCase",
      "current": "AsyncErrorBoundary",
      "suggested": "asyncErrorBoundary"
    },
    {
      "type": "variable_naming",
      "file": "components\\ErrorBoundary\\ErrorBoundary.tsx",
      "line": 49,
      "issue": "Variable should use camelCase",
      "current": "DefaultErrorFallback",
      "suggested": "defaultErrorFallback"
    },
    {
      "type": "variable_naming",
      "file": "components\\ErrorBoundary\\ErrorBoundary.tsx",
      "line": 104,
      "issue": "Variable should use camelCase",
      "current": "WrappedComponent",
      "suggested": "wrappedComponent"
    },
    {
      "type": "function_naming",
      "file": "components\\ErrorBoundary\\ErrorBoundary.tsx",
      "line": 104,
      "issue": "Function should use camelCase",
      "current": "WrappedComponent",
      "suggested": "wrappedComponent"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\AdaptiveExerciseEngine.tsx",
      "line": 22,
      "issue": "Variable should use camelCase",
      "current": "AdaptiveExerciseEngine",
      "suggested": "adaptiveExerciseEngine"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\ExerciseCard.tsx",
      "line": 17,
      "issue": "Variable should use camelCase",
      "current": "ExerciseCard",
      "suggested": "exerciseCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\ExerciseDragDrop.tsx",
      "line": 13,
      "issue": "Variable should use camelCase",
      "current": "ExerciseDragDrop",
      "suggested": "exerciseDragDrop"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\ExerciseEngine.tsx",
      "line": 87,
      "issue": "Variable should use camelCase",
      "current": "ExerciseEngine",
      "suggested": "exerciseEngine"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\ExerciseManager.tsx",
      "line": 34,
      "issue": "Variable should use camelCase",
      "current": "ExerciseManager",
      "suggested": "exerciseManager"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\SimpleExerciseComponent.tsx",
      "line": 11,
      "issue": "Variable should use camelCase",
      "current": "SimpleExerciseComponent",
      "suggested": "simpleExerciseComponent"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\types\\ExerciseCalcul.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "ExerciseCalcul",
      "suggested": "exerciseCalcul"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\types\\ExerciseDragDrop.tsx",
      "line": 28,
      "issue": "Variable should use camelCase",
      "current": "ExerciseDragDrop",
      "suggested": "exerciseDragDrop"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\types\\ExerciseQCM.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "ExerciseQCM",
      "suggested": "exerciseQCM"
    },
    {
      "type": "variable_naming",
      "file": "components\\exercise\\types\\ExerciseTextLibre.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "ExerciseTextLibre",
      "suggested": "exerciseTextLibre"
    },
    {
      "type": "variable_naming",
      "file": "components\\fallback\\Canvas2DRenderer.tsx",
      "line": 22,
      "issue": "Variable should use camelCase",
      "current": "Canvas2DRenderer",
      "suggested": "canvas2DRenderer"
    },
    {
      "type": "variable_naming",
      "file": "components\\fallback\\FallbackUISystem.tsx",
      "line": 39,
      "issue": "Variable should use camelCase",
      "current": "FallbackUISystem",
      "suggested": "fallbackUISystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\fallback\\FallbackUISystem.tsx",
      "line": 271,
      "issue": "Variable should use camelCase",
      "current": "LoadingState",
      "suggested": "loadingState"
    },
    {
      "type": "variable_naming",
      "file": "components\\fallback\\FallbackUISystem.tsx",
      "line": 330,
      "issue": "Variable should use camelCase",
      "current": "ErrorMessage",
      "suggested": "errorMessage"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\EnhancedMathGame.tsx",
      "line": 10,
      "issue": "Variable should use camelCase",
      "current": "EnhancedMathGame",
      "suggested": "enhancedMathGame"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\FrenchMathsGame.tsx",
      "line": 30,
      "issue": "Variable should use camelCase",
      "current": "FrenchMathsGame",
      "suggested": "frenchMathsGame"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\FrenchPhonicsGame.tsx",
      "line": 35,
      "issue": "Variable should use camelCase",
      "current": "FrenchPhonicsGame",
      "suggested": "frenchPhonicsGame"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\MathGameWrapper.tsx",
      "line": 19,
      "issue": "Variable should use camelCase",
      "current": "MathGameWrapper",
      "suggested": "mathGameWrapper"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 70,
      "issue": "Variable should use camelCase",
      "current": "LetterTile",
      "suggested": "letterTile"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 95,
      "issue": "Variable should use camelCase",
      "current": "VirtualKeyboard",
      "suggested": "virtualKeyboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 136,
      "issue": "Variable should use camelCase",
      "current": "MistakeIndicator",
      "suggested": "mistakeIndicator"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 169,
      "issue": "Variable should use camelCase",
      "current": "VictoryAnimation",
      "suggested": "victoryAnimation"
    },
    {
      "type": "variable_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 239,
      "issue": "Variable should use camelCase",
      "current": "MysteryWordGame",
      "suggested": "mysteryWordGame"
    },
    {
      "type": "function_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 70,
      "issue": "Function should use camelCase",
      "current": "LetterTile",
      "suggested": "letterTile"
    },
    {
      "type": "function_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 95,
      "issue": "Function should use camelCase",
      "current": "VirtualKeyboard",
      "suggested": "virtualKeyboard"
    },
    {
      "type": "function_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 136,
      "issue": "Function should use camelCase",
      "current": "MistakeIndicator",
      "suggested": "mistakeIndicator"
    },
    {
      "type": "function_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 169,
      "issue": "Function should use camelCase",
      "current": "VictoryAnimation",
      "suggested": "victoryAnimation"
    },
    {
      "type": "function_naming",
      "file": "components\\games\\MysteryWordGame.tsx",
      "line": 239,
      "issue": "Function should use camelCase",
      "current": "MysteryWordGame",
      "suggested": "mysteryWordGame"
    },
    {
      "type": "variable_naming",
      "file": "components\\gdpr\\ConsentBanner.tsx",
      "line": 105,
      "issue": "Variable should use camelCase",
      "current": "ConsentBanner",
      "suggested": "consentBanner"
    },
    {
      "type": "variable_naming",
      "file": "components\\gdpr\\GDPRDashboard.tsx",
      "line": 101,
      "issue": "Variable should use camelCase",
      "current": "GDPRDashboard",
      "suggested": "gDPRDashboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\gdpr\\GDPRTestIntegration.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "APIServiceTest",
      "suggested": "aPIServiceTest"
    },
    {
      "type": "variable_naming",
      "file": "components\\gdpr\\GDPRTestIntegration.tsx",
      "line": 113,
      "issue": "Variable should use camelCase",
      "current": "HooksTest",
      "suggested": "hooksTest"
    },
    {
      "type": "variable_naming",
      "file": "components\\gdpr\\GDPRTestIntegration.tsx",
      "line": 208,
      "issue": "Variable should use camelCase",
      "current": "ContextTest",
      "suggested": "contextTest"
    },
    {
      "type": "variable_naming",
      "file": "components\\gdpr\\GDPRTestIntegration.tsx",
      "line": 331,
      "issue": "Variable should use camelCase",
      "current": "GDPRTestIntegrationInner",
      "suggested": "gDPRTestIntegrationInner"
    },
    {
      "type": "variable_naming",
      "file": "components\\gdpr\\GDPRTestIntegration.tsx",
      "line": 353,
      "issue": "Variable should use camelCase",
      "current": "GDPRTestIntegration",
      "suggested": "gDPRTestIntegration"
    },
    {
      "type": "file_naming",
      "file": "components\\handwriting\\hooks\\useCP2025Backend.ts",
      "issue": "Component file should use PascalCase",
      "current": "useCP2025Backend",
      "suggested": "UseCP2025Backend"
    },
    {
      "type": "file_naming",
      "file": "components\\handwriting\\index.ts",
      "issue": "Component file should use PascalCase",
      "current": "index",
      "suggested": "Index"
    },
    {
      "type": "variable_naming",
      "file": "components\\handwriting\\PlumeEnchanteeCP2025.tsx",
      "line": 152,
      "issue": "Variable should use camelCase",
      "current": "PlumeEnchanteeCP2025",
      "suggested": "plumeEnchanteeCP2025"
    },
    {
      "type": "file_naming",
      "file": "components\\handwriting\\utils\\AudioManager.ts",
      "issue": "Utility file should use camelCase",
      "current": "AudioManager",
      "suggested": "audioManager"
    },
    {
      "type": "file_naming",
      "file": "components\\handwriting\\utils\\EvaluationSystem.ts",
      "issue": "Utility file should use camelCase",
      "current": "EvaluationSystem",
      "suggested": "evaluationSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\handwriting\\utils\\EvaluationSystem.ts",
      "line": 165,
      "issue": "Variable should use camelCase",
      "current": "prochaine_etape",
      "suggested": "prochaineEtape"
    },
    {
      "type": "file_naming",
      "file": "components\\handwriting\\utils\\PressureSystem.ts",
      "issue": "Utility file should use camelCase",
      "current": "PressureSystem",
      "suggested": "pressureSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\HybridMascotSystem.tsx",
      "line": 42,
      "issue": "Variable should use camelCase",
      "current": "HybridMascotSystem",
      "suggested": "hybridMascotSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\KioskModeActivator.tsx",
      "line": 9,
      "issue": "Variable should use camelCase",
      "current": "KioskModeActivator",
      "suggested": "kioskModeActivator"
    },
    {
      "type": "variable_naming",
      "file": "components\\layout\\FocusedLayout.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "FocusedLayout",
      "suggested": "focusedLayout"
    },
    {
      "type": "variable_naming",
      "file": "components\\layout\\Header.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "Header",
      "suggested": "header"
    },
    {
      "type": "variable_naming",
      "file": "components\\layout\\Layout.tsx",
      "line": 15,
      "issue": "Variable should use camelCase",
      "current": "Layout",
      "suggested": "layout"
    },
    {
      "type": "variable_naming",
      "file": "components\\layout\\Sidebar.tsx",
      "line": 22,
      "issue": "Variable should use camelCase",
      "current": "Sidebar",
      "suggested": "sidebar"
    },
    {
      "type": "variable_naming",
      "file": "components\\mascot\\MascotWardrobe.tsx",
      "line": 16,
      "issue": "Variable should use camelCase",
      "current": "MascotWardrobe",
      "suggested": "mascotWardrobe"
    },
    {
      "type": "variable_naming",
      "file": "components\\MascotWardrobe3D.tsx",
      "line": 127,
      "issue": "Variable should use camelCase",
      "current": "MascotWardrobe3D",
      "suggested": "mascotWardrobe3D"
    },
    {
      "type": "variable_naming",
      "file": "components\\mobile\\BatteryOptimizedAnimations.tsx",
      "line": 51,
      "issue": "Variable should use camelCase",
      "current": "BatteryOptimizedAnimations",
      "suggested": "batteryOptimizedAnimations"
    },
    {
      "type": "variable_naming",
      "file": "components\\mobile\\BatteryOptimizedAnimations.tsx",
      "line": 445,
      "issue": "Variable should use camelCase",
      "current": "BatteryDebugPanel",
      "suggested": "batteryDebugPanel"
    },
    {
      "type": "variable_naming",
      "file": "components\\mobile\\BatteryOptimizedAnimations.tsx",
      "line": 570,
      "issue": "Variable should use camelCase",
      "current": "BatteryAnimationVariants",
      "suggested": "batteryAnimationVariants"
    },
    {
      "type": "variable_naming",
      "file": "components\\mobile\\MobileParticleSystem.tsx",
      "line": 45,
      "issue": "Variable should use camelCase",
      "current": "MobileParticleSystem",
      "suggested": "mobileParticleSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\MobileOptimizedRenderer.tsx",
      "line": 34,
      "issue": "Variable should use camelCase",
      "current": "MobileOptimizedRenderer",
      "suggested": "mobileOptimizedRenderer"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyImage.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "LazyImage",
      "suggested": "lazyImage"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 24,
      "issue": "Variable should use camelCase",
      "current": "QuickLoader",
      "suggested": "quickLoader"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 30,
      "issue": "Variable should use camelCase",
      "current": "DetailedLoader",
      "suggested": "detailedLoader"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 37,
      "issue": "Variable should use camelCase",
      "current": "FullScreenLoader",
      "suggested": "fullScreenLoader"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 67,
      "issue": "Variable should use camelCase",
      "current": "Fallback",
      "suggested": "fallback"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 105,
      "issue": "Variable should use camelCase",
      "current": "LazyComponent",
      "suggested": "lazyComponent"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 129,
      "issue": "Variable should use camelCase",
      "current": "DashboardLazy",
      "suggested": "dashboardLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 137,
      "issue": "Variable should use camelCase",
      "current": "ExercisesLazy",
      "suggested": "exercisesLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 146,
      "issue": "Variable should use camelCase",
      "current": "ProfileLazy",
      "suggested": "profileLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 153,
      "issue": "Variable should use camelCase",
      "current": "ProgressLazy",
      "suggested": "progressLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 161,
      "issue": "Variable should use camelCase",
      "current": "AdminPanelLazy",
      "suggested": "adminPanelLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 169,
      "issue": "Variable should use camelCase",
      "current": "MascotSystemLazy",
      "suggested": "mascotSystemLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 176,
      "issue": "Variable should use camelCase",
      "current": "WardrobeSystemLazy",
      "suggested": "wardrobeSystemLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 183,
      "issue": "Variable should use camelCase",
      "current": "CrossBrowserMascot3DLazy",
      "suggested": "crossBrowserMascot3DLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 191,
      "issue": "Variable should use camelCase",
      "current": "ExerciseEngineTestLazy",
      "suggested": "exerciseEngineTestLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 198,
      "issue": "Variable should use camelCase",
      "current": "XPSystemThemeTestLazy",
      "suggested": "xPSystemThemeTestLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 205,
      "issue": "Variable should use camelCase",
      "current": "WardrobeSystemTestLazy",
      "suggested": "wardrobeSystemTestLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 212,
      "issue": "Variable should use camelCase",
      "current": "ComprehensiveTestSuiteLazy",
      "suggested": "comprehensiveTestSuiteLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 219,
      "issue": "Variable should use camelCase",
      "current": "CrossBrowserTestSuiteLazy",
      "suggested": "crossBrowserTestSuiteLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 226,
      "issue": "Variable should use camelCase",
      "current": "ErrorHandlingTestSuiteLazy",
      "suggested": "errorHandlingTestSuiteLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 234,
      "issue": "Variable should use camelCase",
      "current": "AnalyticsDashboardLazy",
      "suggested": "analyticsDashboardLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 241,
      "issue": "Variable should use camelCase",
      "current": "AIStateVisualizationLazy",
      "suggested": "aIStateVisualizationLazy"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 248,
      "issue": "Variable should use camelCase",
      "current": "Scene3DInspectorLazy",
      "suggested": "scene3DInspectorLazy"
    },
    {
      "type": "function_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 113,
      "issue": "Function should use camelCase",
      "current": "LazyRoute",
      "suggested": "lazyRoute"
    },
    {
      "type": "function_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 24,
      "issue": "Function should use camelCase",
      "current": "QuickLoader",
      "suggested": "quickLoader"
    },
    {
      "type": "function_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 30,
      "issue": "Function should use camelCase",
      "current": "DetailedLoader",
      "suggested": "detailedLoader"
    },
    {
      "type": "function_naming",
      "file": "components\\optimization\\LazyRoutes.tsx",
      "line": 37,
      "issue": "Function should use camelCase",
      "current": "FullScreenLoader",
      "suggested": "fullScreenLoader"
    },
    {
      "type": "variable_naming",
      "file": "components\\optimization\\OptimizationDashboard.tsx",
      "line": 37,
      "issue": "Variable should use camelCase",
      "current": "OptimizationDashboard",
      "suggested": "optimizationDashboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\physics\\PhysicsSystemManager.tsx",
      "line": 49,
      "issue": "Variable should use camelCase",
      "current": "PhysicsSystemManager",
      "suggested": "physicsSystemManager"
    },
    {
      "type": "variable_naming",
      "file": "components\\revision\\RevisionManager.tsx",
      "line": 41,
      "issue": "Variable should use camelCase",
      "current": "RevisionManager",
      "suggested": "revisionManager"
    },
    {
      "type": "variable_naming",
      "file": "components\\routing\\AppRouter.tsx",
      "line": 26,
      "issue": "Variable should use camelCase",
      "current": "AppRouter",
      "suggested": "appRouter"
    },
    {
      "type": "variable_naming",
      "file": "components\\SecurityHeaders\\SecurityHeaders.tsx",
      "line": 5,
      "issue": "Variable should use camelCase",
      "current": "SecurityHeaders",
      "suggested": "securityHeaders"
    },
    {
      "type": "variable_naming",
      "file": "components\\SecurityProvider\\SecurityProvider.tsx",
      "line": 12,
      "issue": "Variable should use camelCase",
      "current": "SecurityContext",
      "suggested": "securityContext"
    },
    {
      "type": "variable_naming",
      "file": "components\\SecurityProvider\\SecurityProvider.tsx",
      "line": 18,
      "issue": "Variable should use camelCase",
      "current": "SecurityProvider",
      "suggested": "securityProvider"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\AdvancedMascotSystem.tsx",
      "line": 41,
      "issue": "Variable should use camelCase",
      "current": "AdvancedMascotSystem",
      "suggested": "advancedMascotSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\AdvancedParticleEngine.tsx",
      "line": 35,
      "issue": "Variable should use camelCase",
      "current": "AdvancedParticleEngine",
      "suggested": "advancedParticleEngine"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\AnimatedCard.tsx",
      "line": 102,
      "issue": "Variable should use camelCase",
      "current": "AnimatedCard",
      "suggested": "animatedCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Button.tsx",
      "line": 43,
      "issue": "Variable should use camelCase",
      "current": "Button",
      "suggested": "button"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Card.tsx",
      "line": 39,
      "issue": "Variable should use camelCase",
      "current": "Card",
      "suggested": "card"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\ConsentBanner.tsx",
      "line": 12,
      "issue": "Variable should use camelCase",
      "current": "ConsentBanner",
      "suggested": "consentBanner"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\ExerciseCard.tsx",
      "line": 17,
      "issue": "Variable should use camelCase",
      "current": "ExerciseCard",
      "suggested": "exerciseCard"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\FloatingElements.tsx",
      "line": 22,
      "issue": "Variable should use camelCase",
      "current": "FloatingElement",
      "suggested": "floatingElement"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\FloatingElements.tsx",
      "line": 49,
      "issue": "Variable should use camelCase",
      "current": "FloatingElements",
      "suggested": "floatingElements"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\FloatingElements.tsx",
      "line": 90,
      "issue": "Variable should use camelCase",
      "current": "SparkleElements",
      "suggested": "sparkleElements"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\FloatingElements.tsx",
      "line": 103,
      "issue": "Variable should use camelCase",
      "current": "MagicElements",
      "suggested": "magicElements"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\FloatingElements.tsx",
      "line": 116,
      "issue": "Variable should use camelCase",
      "current": "CelebrationElements",
      "suggested": "celebrationElements"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Header.tsx",
      "line": 50,
      "issue": "Variable should use camelCase",
      "current": "Header",
      "suggested": "header"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Header.tsx",
      "line": 507,
      "issue": "Variable should use camelCase",
      "current": "PageHeader",
      "suggested": "pageHeader"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Header.tsx",
      "line": 625,
      "issue": "Variable should use camelCase",
      "current": "Breadcrumbs",
      "suggested": "breadcrumbs"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Input.tsx",
      "line": 24,
      "issue": "Variable should use camelCase",
      "current": "Input",
      "suggested": "input"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Input.tsx",
      "line": 251,
      "issue": "Variable should use camelCase",
      "current": "Textarea",
      "suggested": "textarea"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Input.tsx",
      "line": 444,
      "issue": "Variable should use camelCase",
      "current": "SearchInput",
      "suggested": "searchInput"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\LazyComponentLoader.tsx",
      "line": 12,
      "issue": "Variable should use camelCase",
      "current": "LazyComponentLoader",
      "suggested": "lazyComponentLoader"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\LoadingSpinner.tsx",
      "line": 25,
      "issue": "Variable should use camelCase",
      "current": "LoadingSpinner",
      "suggested": "loadingSpinner"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Modal.tsx",
      "line": 26,
      "issue": "Variable should use camelCase",
      "current": "Modal",
      "suggested": "modal"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\NextLevelXPSystem.tsx",
      "line": 69,
      "issue": "Variable should use camelCase",
      "current": "NextLevelXPSystem",
      "suggested": "nextLevelXPSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\ProgressBar.tsx",
      "line": 11,
      "issue": "Variable should use camelCase",
      "current": "ProgressBar",
      "suggested": "progressBar"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\RobustXPSystem.tsx",
      "line": 42,
      "issue": "Variable should use camelCase",
      "current": "RobustXPSystem",
      "suggested": "robustXPSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\SparkyMascot3D.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "SparkyMascot3D",
      "suggested": "sparkyMascot3D"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 17,
      "issue": "Variable should use camelCase",
      "current": "Toast",
      "suggested": "toast"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 108,
      "issue": "Variable should use camelCase",
      "current": "ToastContainer",
      "suggested": "toastContainer"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 145,
      "issue": "Variable should use camelCase",
      "current": "ProgressBar",
      "suggested": "progressBar"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 208,
      "issue": "Variable should use camelCase",
      "current": "SparkleElements",
      "suggested": "sparkleElements"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 254,
      "issue": "Variable should use camelCase",
      "current": "MagicElements",
      "suggested": "magicElements"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 302,
      "issue": "Variable should use camelCase",
      "current": "CelebrationElements",
      "suggested": "celebrationElements"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 392,
      "issue": "Variable should use camelCase",
      "current": "FallbackComponent",
      "suggested": "fallbackComponent"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\Toast.tsx",
      "line": 444,
      "issue": "Variable should use camelCase",
      "current": "Input",
      "suggested": "input"
    },
    {
      "type": "variable_naming",
      "file": "components\\ui\\WardrobeSystem.tsx",
      "line": 312,
      "issue": "Variable should use camelCase",
      "current": "WardrobeSystem",
      "suggested": "wardrobeSystem"
    },
    {
      "type": "variable_naming",
      "file": "components\\WardrobeSystem.tsx",
      "line": 38,
      "issue": "Variable should use camelCase",
      "current": "WardrobeSystem",
      "suggested": "wardrobeSystem"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Button.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Button.test",
      "suggested": "Button.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Card.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Card.test",
      "suggested": "Card.test"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Card.test.tsx",
      "line": 219,
      "issue": "Variable should use camelCase",
      "current": "KeyboardCard",
      "suggested": "keyboardCard"
    },
    {
      "type": "function_naming",
      "file": "components\\__tests__\\Card.test.tsx",
      "line": 219,
      "issue": "Function should use camelCase",
      "current": "KeyboardCard",
      "suggested": "keyboardCard"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\ConsentBanner.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "ConsentBanner.test",
      "suggested": "ConsentBanner.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Dashboard.test",
      "suggested": "Dashboard.test"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 9,
      "issue": "Variable should use camelCase",
      "current": "React",
      "suggested": "react"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 13,
      "issue": "Variable should use camelCase",
      "current": "React",
      "suggested": "react"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 18,
      "issue": "Variable should use camelCase",
      "current": "React",
      "suggested": "react"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 26,
      "issue": "Variable should use camelCase",
      "current": "React",
      "suggested": "react"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 33,
      "issue": "Variable should use camelCase",
      "current": "React",
      "suggested": "react"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 47,
      "issue": "Variable should use camelCase",
      "current": "MockDashboard",
      "suggested": "mockDashboard"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 71,
      "issue": "Variable should use camelCase",
      "current": "Dashboard",
      "suggested": "dashboard"
    },
    {
      "type": "function_naming",
      "file": "components\\__tests__\\Dashboard.test.tsx",
      "line": 47,
      "issue": "Function should use camelCase",
      "current": "MockDashboard",
      "suggested": "mockDashboard"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "ErrorBoundary.test",
      "suggested": "ErrorBoundary.test"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "line": 7,
      "issue": "Variable should use camelCase",
      "current": "ThrowError",
      "suggested": "throwError"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "line": 15,
      "issue": "Variable should use camelCase",
      "current": "AlwaysThrows",
      "suggested": "alwaysThrows"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "line": 20,
      "issue": "Variable should use camelCase",
      "current": "CustomFallback",
      "suggested": "customFallback"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "line": 163,
      "issue": "Variable should use camelCase",
      "current": "FallbackWithoutError",
      "suggested": "fallbackWithoutError"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "line": 183,
      "issue": "Variable should use camelCase",
      "current": "AlwaysThrowsNow",
      "suggested": "alwaysThrowsNow"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "line": 233,
      "issue": "Variable should use camelCase",
      "current": "TypeErrorComponent",
      "suggested": "typeErrorComponent"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ErrorBoundary.test.tsx",
      "line": 250,
      "issue": "Variable should use camelCase",
      "current": "NoMessageError",
      "suggested": "noMessageError"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\ExerciseCard.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "ExerciseCard.test",
      "suggested": "ExerciseCard.test"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\ExerciseCard.test.tsx",
      "line": 5,
      "issue": "Variable should use camelCase",
      "current": "MockExerciseCard",
      "suggested": "mockExerciseCard"
    },
    {
      "type": "function_naming",
      "file": "components\\__tests__\\ExerciseCard.test.tsx",
      "line": 5,
      "issue": "Function should use camelCase",
      "current": "MockExerciseCard",
      "suggested": "mockExerciseCard"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\FloatingElements.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "FloatingElements.test",
      "suggested": "FloatingElements.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Header.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Header.test",
      "suggested": "Header.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Input.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Input.test",
      "suggested": "Input.test"
    },
    {
      "type": "variable_naming",
      "file": "components\\__tests__\\Input.test.tsx",
      "line": 156,
      "issue": "Variable should use camelCase",
      "current": "Component",
      "suggested": "component"
    },
    {
      "type": "function_naming",
      "file": "components\\__tests__\\Input.test.tsx",
      "line": 156,
      "issue": "Function should use camelCase",
      "current": "Component",
      "suggested": "component"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Layout.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Layout.test",
      "suggested": "Layout.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\LoadingSpinner.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "LoadingSpinner.test",
      "suggested": "LoadingSpinner.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Modal.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Modal.test",
      "suggested": "Modal.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\ProgressBar.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "ProgressBar.test",
      "suggested": "ProgressBar.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Sidebar.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Sidebar.test",
      "suggested": "Sidebar.test"
    },
    {
      "type": "file_naming",
      "file": "components\\__tests__\\Toast.test.tsx",
      "issue": "Component file should use PascalCase",
      "current": "Toast.test",
      "suggested": "Toast.test"
    },
    {
      "type": "variable_naming",
      "file": "context\\AppContext.tsx",
      "line": 131,
      "issue": "Variable should use camelCase",
      "current": "AppContext",
      "suggested": "appContext"
    },
    {
      "type": "function_naming",
      "file": "context\\AppContext.tsx",
      "line": 134,
      "issue": "Function should use camelCase",
      "current": "AppProvider",
      "suggested": "appProvider"
    },
    {
      "type": "variable_naming",
      "file": "context\\KioskModeContext.tsx",
      "line": 16,
      "issue": "Variable should use camelCase",
      "current": "KioskModeContext",
      "suggested": "kioskModeContext"
    },
    {
      "type": "variable_naming",
      "file": "context\\KioskModeContext.tsx",
      "line": 25,
      "issue": "Variable should use camelCase",
      "current": "KioskModeProvider",
      "suggested": "kioskModeProvider"
    },
    {
      "type": "variable_naming",
      "file": "context\\KioskModeContext.tsx",
      "line": 289,
      "issue": "Variable should use camelCase",
      "current": "KioskModeActivator",
      "suggested": "kioskModeActivator"
    },
    {
      "type": "variable_naming",
      "file": "contexts\\GDPRContext.tsx",
      "line": 180,
      "issue": "Variable should use camelCase",
      "current": "GDPRContext",
      "suggested": "gDPRContext"
    },
    {
      "type": "variable_naming",
      "file": "contexts\\GDPRContext.tsx",
      "line": 190,
      "issue": "Variable should use camelCase",
      "current": "GDPRProvider",
      "suggested": "gDPRProvider"
    },
    {
      "type": "variable_naming",
      "file": "gdpr\\index.ts",
      "line": 175,
      "issue": "Variable should use camelCase",
      "current": "App",
      "suggested": "app"
    },
    {
      "type": "variable_naming",
      "file": "gdpr\\index.ts",
      "line": 195,
      "issue": "Variable should use camelCase",
      "current": "StudentProfile",
      "suggested": "studentProfile"
    },
    {
      "type": "variable_naming",
      "file": "gdpr\\index.ts",
      "line": 211,
      "issue": "Variable should use camelCase",
      "current": "DataExportButton",
      "suggested": "dataExportButton"
    },
    {
      "type": "variable_naming",
      "file": "gdpr\\index.ts",
      "line": 226,
      "issue": "Variable should use camelCase",
      "current": "GDPRRequestForm",
      "suggested": "gDPRRequestForm"
    },
    {
      "type": "function_naming",
      "file": "gdpr\\index.ts",
      "line": 175,
      "issue": "Function should use camelCase",
      "current": "App",
      "suggested": "app"
    },
    {
      "type": "function_naming",
      "file": "gdpr\\index.ts",
      "line": 195,
      "issue": "Function should use camelCase",
      "current": "StudentProfile",
      "suggested": "studentProfile"
    },
    {
      "type": "function_naming",
      "file": "gdpr\\index.ts",
      "line": 211,
      "issue": "Function should use camelCase",
      "current": "DataExportButton",
      "suggested": "dataExportButton"
    },
    {
      "type": "function_naming",
      "file": "gdpr\\index.ts",
      "line": 226,
      "issue": "Function should use camelCase",
      "current": "GDPRRequestForm",
      "suggested": "gDPRRequestForm"
    },
    {
      "type": "variable_naming",
      "file": "hooks\\useAuth.tsx",
      "line": 30,
      "issue": "Variable should use camelCase",
      "current": "AuthContext",
      "suggested": "authContext"
    },
    {
      "type": "function_naming",
      "file": "hooks\\useAuth.tsx",
      "line": 37,
      "issue": "Function should use camelCase",
      "current": "AuthProvider",
      "suggested": "authProvider"
    },
    {
      "type": "variable_naming",
      "file": "hooks\\__tests__\\useAuth.test.tsx",
      "line": 68,
      "issue": "Variable should use camelCase",
      "current": "React",
      "suggested": "react"
    },
    {
      "type": "function_naming",
      "file": "MainApp.tsx",
      "line": 4,
      "issue": "Function should use camelCase",
      "current": "MainApp",
      "suggested": "mainApp"
    },
    {
      "type": "variable_naming",
      "file": "pages\\AdminPanel.tsx",
      "line": 27,
      "issue": "Variable should use camelCase",
      "current": "AdminPanel",
      "suggested": "adminPanel"
    },
    {
      "type": "variable_naming",
      "file": "pages\\AdvancedDemo.tsx",
      "line": 8,
      "issue": "Variable should use camelCase",
      "current": "AdvancedDemo",
      "suggested": "advancedDemo"
    },
    {
      "type": "variable_naming",
      "file": "pages\\AdvancedDemo.tsx",
      "line": 71,
      "issue": "Variable should use camelCase",
      "current": "ActiveComponent",
      "suggested": "activeComponent"
    },
    {
      "type": "variable_naming",
      "file": "pages\\BreakGamesDemo.tsx",
      "line": 33,
      "issue": "Variable should use camelCase",
      "current": "BubblePopGame",
      "suggested": "bubblePopGame"
    },
    {
      "type": "variable_naming",
      "file": "pages\\BreakGamesDemo.tsx",
      "line": 105,
      "issue": "Variable should use camelCase",
      "current": "SparkyDanceGame",
      "suggested": "sparkyDanceGame"
    },
    {
      "type": "variable_naming",
      "file": "pages\\BreakGamesDemo.tsx",
      "line": 267,
      "issue": "Variable should use camelCase",
      "current": "MagicBreathingGame",
      "suggested": "magicBreathingGame"
    },
    {
      "type": "variable_naming",
      "file": "pages\\BreakGamesDemo.tsx",
      "line": 378,
      "issue": "Variable should use camelCase",
      "current": "MiniGamesDemo",
      "suggested": "miniGamesDemo"
    },
    {
      "type": "variable_naming",
      "file": "pages\\BreakGamesDemo.tsx",
      "line": 416,
      "issue": "Variable should use camelCase",
      "current": "GameComponent",
      "suggested": "gameComponent"
    },
    {
      "type": "variable_naming",
      "file": "pages\\ComprehensiveTestSuite.tsx",
      "line": 26,
      "issue": "Variable should use camelCase",
      "current": "ComprehensiveTestSuite",
      "suggested": "comprehensiveTestSuite"
    },
    {
      "type": "variable_naming",
      "file": "pages\\CrossBrowserTestSuite.tsx",
      "line": 33,
      "issue": "Variable should use camelCase",
      "current": "CrossBrowserTestSuite",
      "suggested": "crossBrowserTestSuite"
    },
    {
      "type": "variable_naming",
      "file": "pages\\Dashboard.tsx",
      "line": 86,
      "issue": "Variable should use camelCase",
      "current": "Dashboard",
      "suggested": "dashboard"
    },
    {
      "type": "variable_naming",
      "file": "pages\\ErrorHandlingTestSuite.tsx",
      "line": 27,
      "issue": "Variable should use camelCase",
      "current": "ErrorHandlingTestSuite",
      "suggested": "errorHandlingTestSuite"
    },
    {
      "type": "variable_naming",
      "file": "pages\\ErrorHandlingTestSuite.tsx",
      "line": 137,
      "issue": "Variable should use camelCase",
      "current": "CrashingComponent",
      "suggested": "crashingComponent"
    },
    {
      "type": "variable_naming",
      "file": "pages\\ExerciseEngineTest.tsx",
      "line": 47,
      "issue": "Variable should use camelCase",
      "current": "ExerciseEngineTest",
      "suggested": "exerciseEngineTest"
    },
    {
      "type": "variable_naming",
      "file": "pages\\Exercises.tsx",
      "line": 30,
      "issue": "Variable should use camelCase",
      "current": "ExercisesPage",
      "suggested": "exercisesPage"
    },
    {
      "type": "variable_naming",
      "file": "pages\\lazy\\AdminPanelLazy.tsx",
      "line": 3,
      "issue": "Variable should use camelCase",
      "current": "AdminPanelLazy",
      "suggested": "adminPanelLazy"
    },
    {
      "type": "variable_naming",
      "file": "pages\\lazy\\DashboardLazy.tsx",
      "line": 3,
      "issue": "Variable should use camelCase",
      "current": "DashboardLazy",
      "suggested": "dashboardLazy"
    },
    {
      "type": "variable_naming",
      "file": "pages\\lazy\\ExercisesLazy.tsx",
      "line": 3,
      "issue": "Variable should use camelCase",
      "current": "ExercisesLazy",
      "suggested": "exercisesLazy"
    },
    {
      "type": "variable_naming",
      "file": "pages\\lazy\\ProfileLazy.tsx",
      "line": 3,
      "issue": "Variable should use camelCase",
      "current": "ProfileLazy",
      "suggested": "profileLazy"
    },
    {
      "type": "variable_naming",
      "file": "pages\\lazy\\ProgressLazy.tsx",
      "line": 3,
      "issue": "Variable should use camelCase",
      "current": "ProgressLazy",
      "suggested": "progressLazy"
    },
    {
      "type": "variable_naming",
      "file": "pages\\Login.tsx",
      "line": 9,
      "issue": "Variable should use camelCase",
      "current": "Login",
      "suggested": "login"
    },
    {
      "type": "variable_naming",
      "file": "pages\\Profile.tsx",
      "line": 14,
      "issue": "Variable should use camelCase",
      "current": "Profile",
      "suggested": "profile"
    },
    {
      "type": "variable_naming",
      "file": "pages\\Progress.tsx",
      "line": 43,
      "issue": "Variable should use camelCase",
      "current": "ProgressPage",
      "suggested": "progressPage"
    },
    {
      "type": "variable_naming",
      "file": "pages\\WardrobeSystemTest.tsx",
      "line": 7,
      "issue": "Variable should use camelCase",
      "current": "WardrobeSystemTest",
      "suggested": "wardrobeSystemTest"
    },
    {
      "type": "variable_naming",
      "file": "pages\\XPSystemThemeTest.tsx",
      "line": 7,
      "issue": "Variable should use camelCase",
      "current": "XPSystemThemeTest",
      "suggested": "xPSystemThemeTest"
    },
    {
      "type": "variable_naming",
      "file": "test-lazy-loading.tsx",
      "line": 6,
      "issue": "Variable should use camelCase",
      "current": "TestLazyLoading",
      "suggested": "testLazyLoading"
    },
    {
      "type": "variable_naming",
      "file": "tests\\test-utils.tsx",
      "line": 7,
      "issue": "Variable should use camelCase",
      "current": "MockGDPRProvider",
      "suggested": "mockGDPRProvider"
    },
    {
      "type": "variable_naming",
      "file": "tests\\test-utils.tsx",
      "line": 12,
      "issue": "Variable should use camelCase",
      "current": "AllTheProviders",
      "suggested": "allTheProviders"
    },
    {
      "type": "variable_naming",
      "file": "utils\\bundleOptimized.ts",
      "line": 492,
      "issue": "Variable should use camelCase",
      "current": "OptimizationPresets",
      "suggested": "optimizationPresets"
    },
    {
      "type": "variable_naming",
      "file": "utils\\lazyOptimized.tsx",
      "line": 321,
      "issue": "Variable should use camelCase",
      "current": "LazyComponent",
      "suggested": "lazyComponent"
    },
    {
      "type": "variable_naming",
      "file": "utils\\lazyOptimized.tsx",
      "line": 340,
      "issue": "Variable should use camelCase",
      "current": "ErrorBoundary",
      "suggested": "errorBoundary"
    },
    {
      "type": "variable_naming",
      "file": "utils\\lazyOptimized.tsx",
      "line": 398,
      "issue": "Variable should use camelCase",
      "current": "LazyComponents",
      "suggested": "lazyComponents"
    },
    {
      "type": "variable_naming",
      "file": "utils\\lazyOptimized.tsx",
      "line": 489,
      "issue": "Variable should use camelCase",
      "current": "BundleAnalyzer",
      "suggested": "bundleAnalyzer"
    },
    {
      "type": "function_naming",
      "file": "utils\\lazyOptimized.tsx",
      "line": 330,
      "issue": "Function should use camelCase",
      "current": "LazyWrapper",
      "suggested": "lazyWrapper"
    },
    {
      "type": "variable_naming",
      "file": "utils\\mobileTouch.ts",
      "line": 712,
      "issue": "Variable should use camelCase",
      "current": "TouchUtils",
      "suggested": "touchUtils"
    },
    {
      "type": "variable_naming",
      "file": "utils\\threeMemoryManager.ts",
      "line": 97,
      "issue": "Variable should use camelCase",
      "current": "DeviceOptimizer",
      "suggested": "deviceOptimizer"
    },
    {
      "type": "file_naming",
      "file": "utils\\__tests__\\validation.test.ts",
      "issue": "Utility file should use camelCase",
      "current": "validation.test",
      "suggested": "validation.test"
    }
  ],
  "refactoringActions": {
    "removeUnusedImports": 71,
    "removeUnusedFunctions": 59,
    "removeUnusedComponents": 0,
    "extractDuplicates": 75,
    "fixNaming": 277
  }
}